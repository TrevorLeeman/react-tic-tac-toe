{"version":3,"sources":["UI/Icons/CircleSVG.js","UI/Icons/LinkedInIcon.js","UI/Icons/GitHubIcon.js","UI/SocialList.js","UI/Header.js","UI/Menu/Player.js","UI/Menu/PlayerInfo.js","UI/Button.js","UI/Icons/GearIcon.js","UI/Menu/Menu.js","Grid/X.js","Grid/O.js","Grid/GridCell.js","Grid/Grid.js","UI/Footer.js","UI/Modal/MiniGrid/MiniGridCell.js","UI/Modal/MiniGrid/MiniGrid.js","UI/Modal/GameSettings.js","UI/Icons/CloseIcon.js","UI/Modal/Modal.js","Game/GameLogic.js","App.js","index.js"],"names":["CircleSVG","styled","svg","StyledSVG","LinkedInIcon","xmlns","viewBox","d","GitHubIcon","StyledSocialCard","footer","SocialCard","className","href","title","StyledHeader","header","StyledAppTitle","h1","Header","SocialList","StyledPlayer","div","Score","checkInputLength","event","target","innerText","length","key","preventDefault","Player","name","score","useState","playerName","setPlayerName","onKeyPress","onBlur","contentEditable","suppressContentEditableWarning","PlayerInfoWrapper","PlayerInfo","player1Wins","player2Wins","StyledButton","button","Button","children","clickHandler","onClick","GearIcon","focusable","role","PlayerInfoControlsWrapper","aside","Controls","StyledResetButton","StyledSettingsButton","Menu","gameComplete","resetBoardState","showSettings","StyledX","XBar","XBar1","XBar2","X","StyledO","Outline","O","StyledGridCell","HoverArea","HoverX","HoverO","GridCell","row","column","turnCounter","occupied","output","setSelected","isHovered","setIsHovered","XorO","setXorO","cellSelected","useCallback","type","code","hoverCell","useEffect","onMouseEnter","onMouseLeave","tabIndex","flipAnimation","keyframes","StyledGrid","props","rows","columns","createGridCells","boardState","gridCells","push","Grid","updateBoardState","StyledFooter","Footer","MiniGrid","GameSettingsWrapper","form","ModeWrapper","GameSettings","setBoardSize","setNumToWin","closeModal","updateGridSize","numRows","numColumns","numToWin","CloseIcon","width","height","fill","strokeLinecap","strokeLinejoin","ModalBackground","PositionModal","StyledModal","TitleCloseWrap","Modal","closeSettings","setConsecutiveToWin","createInitialBoardState","initialBoardState","createDiagonalBoardState","diagonals","i","checkBoardState","currentBoardState","lengthReqForWin","gameIsWon","winner","currentRow","inARow","tileValue","CssReset","createGlobalStyle","AppContainer","StyledApp","App","setRows","setColumns","setLengthReqForWin","setBoardState","firstTurn","setFirstTurn","setTurnCounter","setGameComplete","modalActive","setModalActive","player1WinCount","setPlayer1WinCount","player2WinCount","setPlayer2WinCount","incrementFirstTurn","currentValue","newBoardState","currentTurnCount","toggleModal","updateBoardSize","rowWin","rowWinner","rowLen","columnLen","columnBasedBoardState","entries","j","checkColumns","columnWin","columnWinner","downLeftDiagonalBoardState","downRightDiagonalBoardState","bothDiagonals","filter","diagonalArr","checkDiagonals","diagonalWin","diagonalWinner","currentWinCount","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b484fc1f.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst CircleSVG = styled.svg`\r\n\ttransition: all 0.5s ease;\r\n\tborder-radius: 50%;\r\n\r\n\t&:hover {\r\n\t\tbox-shadow: 0 4px 5px 0 rgba(0, 0, 0, 0.14),\r\n\t\t\t0 1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.2);\r\n\t}\r\n`;\r\n\r\nexport default CircleSVG;\r\n","import styled from 'styled-components';\r\nimport CircleSVG from './CircleSVG';\r\n\r\nconst StyledSVG = styled(CircleSVG)`\r\n\t&:hover {\r\n\t\tfill: #2867b2;\r\n\t}\r\n`;\r\n\r\nconst LinkedInIcon = () => {\r\n\treturn (\r\n\t\t<StyledSVG xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'>\r\n\t\t\t<path d='M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm-2 16h-2v-6h2v6zm-1-6.891c-.607 0-1.1-.496-1.1-1.109 0-.612.492-1.109 1.1-1.109s1.1.497 1.1 1.109c0 .613-.493 1.109-1.1 1.109zm8 6.891h-1.998v-2.861c0-1.881-2.002-1.722-2.002 0v2.861h-2v-6h2v1.093c.872-1.616 4-1.736 4 1.548v3.359z' />\r\n\t\t</StyledSVG>\r\n\t);\r\n};\r\n\r\nexport default LinkedInIcon;\r\n","import styled from 'styled-components';\r\nimport CircleSVG from './CircleSVG';\r\n\r\nconst StyledSVG = styled(CircleSVG)`\r\n\t&:hover {\r\n\t\tfill: #6cc644;\r\n\t}\r\n`;\r\n\r\nconst GitHubIcon = () => {\r\n\treturn (\r\n\t\t<StyledSVG xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'>\r\n\t\t\t<path d='M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z' />\r\n\t\t</StyledSVG>\r\n\t);\r\n};\r\n\r\nexport default GitHubIcon;\r\n","import styled from 'styled-components';\r\nimport LinkedInIcon from './Icons/LinkedInIcon';\r\nimport GitHubIcon from './Icons/GitHubIcon';\r\n\r\nconst StyledSocialCard = styled.footer`\r\n\tul {\r\n\t\tdisplay: flex;\r\n\t\tgap: 1rem;\r\n\t\tlist-style: none;\r\n\r\n\t\tli {\r\n\t\t\twidth: 4rem;\r\n\t\t\twidth: 4rem;\r\n\t\t\ttransition: all 0.5s ease;\r\n\r\n\t\t\t&:hover {\r\n\t\t\t\ttransform: scale(1.1);\r\n\t\t\t}\r\n\r\n\t\t\tsvg {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\r\n\t\t\t@media (min-width: 800px) and (min-height: 800px) {\r\n\t\t\t\twidth: 5rem;\r\n\t\t\t\twidth: 5rem;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst SocialCard = ({ className }) => {\r\n\treturn (\r\n\t\t<StyledSocialCard className={className}>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref='https://github.com/TrevorLeeman'\r\n\t\t\t\t\t\ttitle='Trevor Leeman on GitHub'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<GitHubIcon />\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref='https://www.linkedin.com/in/trevor-leeman/'\r\n\t\t\t\t\t\ttitle='Trevor Leeman on LinkedIn'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<LinkedInIcon />\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</StyledSocialCard>\r\n\t);\r\n};\r\n\r\nexport default SocialCard;\r\n","import styled from 'styled-components';\r\nimport SocialList from './SocialList';\r\n\r\nconst StyledHeader = styled.header`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\tflex-wrap: wrap;\r\n\tgap: 1rem;\r\n\twidth: 100%;\r\n\tbackground-color: white;\r\n\tpadding: 2rem;\r\n\tbackground-color: #ffffffe6;\r\n\tbox-shadow: 0 12px 17px 2px rgba(0, 0, 0, 0.14),\r\n\t\t0 5px 22px 4px rgba(0, 0, 0, 0.12), 0 7px 8px -4px rgba(0, 0, 0, 0.2);\r\n\r\n\t@media (min-width: 420px) {\r\n\t\tpadding: 1rem;\r\n\t\tmin-height: unset;\r\n\t}\r\n`;\r\n\r\nconst StyledAppTitle = styled.h1`\r\n\tvertical-align: middle;\r\n\tfont-size: 3rem;\r\n\tfont-family: 'Anton', sans-serif;\r\n\tfont-weight: 700;\r\n\tletter-spacing: 2pt;\r\n`;\r\n\r\nconst Header = ({ title }) => {\r\n\treturn (\r\n\t\t<StyledHeader>\r\n\t\t\t<StyledAppTitle>{title}</StyledAppTitle>\r\n\t\t\t<SocialList />\r\n\t\t</StyledHeader>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledPlayer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\twidth: fit-content;\r\n\tfont-size: 1.5rem;\r\n`;\r\n\r\nconst Score = styled.div`\r\n\tfont-size: 3rem;\r\n`;\r\n\r\nconst checkInputLength = (event) => {\r\n\tif (event.target.innerText.length <= 12 && event.key !== 'Enter') {\r\n\t\treturn true;\r\n\t} else {\r\n\t\tevent.preventDefault();\r\n\t\treturn false;\r\n\t}\r\n};\r\n\r\nconst Player = ({ name, score }) => {\r\n\tconst [playerName, setPlayerName] = useState(name);\r\n\r\n\tconst updatePlayerName = (event) => {\r\n\t\tsetPlayerName(event.target.innerText);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StyledPlayer>\r\n\t\t\t<h2\r\n\t\t\t\tonKeyPress={checkInputLength}\r\n\t\t\t\tonBlur={updatePlayerName}\r\n\t\t\t\tcontentEditable='true'\r\n\t\t\t\tsuppressContentEditableWarning={true}\r\n\t\t\t>\r\n\t\t\t\t{playerName}\r\n\t\t\t</h2>\r\n\t\t\t<Score>{score}</Score>\r\n\t\t</StyledPlayer>\r\n\t);\r\n};\r\n\r\nexport default Player;\r\n","import styled from 'styled-components';\r\nimport Player from './Player';\r\n\r\nconst PlayerInfoWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-around;\r\n\twidth: 100%;\r\n\tbackground-color: #ffffffbf;\r\n\tpadding: 1rem;\r\n\tborder-radius: 1rem 1rem 0 0;\r\n`;\r\n\r\nconst PlayerInfo = ({ player1Wins, player2Wins }) => {\r\n\treturn (\r\n\t\t<PlayerInfoWrapper>\r\n\t\t\t<Player name='Player 1' score={player1Wins} />\r\n\t\t\t<Player name='Player 2' score={player2Wins} />\r\n\t\t</PlayerInfoWrapper>\r\n\t);\r\n};\r\n\r\nexport default PlayerInfo;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button`\r\n\tposition: relative;\r\n\ttop: 0;\r\n\tdisplay: inline-block;\r\n\tborder: 0;\r\n\tpadding: 1rem 2rem;\r\n\tborder-radius: 1rem;\r\n\tcursor: pointer;\r\n\r\n\tbackground-color: #7051b8;\r\n\tcolor: white;\r\n\tbox-shadow: 0 1rem 0 #553795;\r\n\r\n\tfont-size: 2rem;\r\n\tfont-family: 'Saira Condensed', sans-serif;\r\n\tfont-weight: 700;\r\n\tletter-spacing: 2pt;\r\n\twhite-space: nowrap;\r\n\tmargin-bottom: 1rem;\r\n\r\n\ttransition: all 0.2s;\r\n\r\n\t&:hover {\r\n\t\ttop: 0.1rem;\r\n\t\tbox-shadow: 0 0.9rem 0px #553795;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t&:active {\r\n\t\ttop: 1rem;\r\n\t\tbox-shadow: 0 2px 0px #553795;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n`;\r\n\r\nconst Button = ({ children, className, clickHandler }) => {\r\n\treturn (\r\n\t\t<StyledButton className={className} onClick={clickHandler}>\r\n\t\t\t{children}\r\n\t\t</StyledButton>\r\n\t);\r\n};\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledSVG = styled.svg`\r\n\ttransition: 200ms ease-out;\r\n\twidth: 2rem;\r\n\theight: 2rem;\r\n\tcursor: pointer;\r\n\r\n\tpath {\r\n\t\tfill: white;\r\n\t}\r\n`;\r\n\r\nconst GearIcon = () => {\r\n\treturn (\r\n\t\t<StyledSVG\r\n\t\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t\taria-hidden='true'\r\n\t\t\tfocusable='false'\r\n\t\t\tdata-prefix='fas'\r\n\t\t\trole='img'\r\n\t\t\tviewBox='0 0 512 512'\r\n\t\t>\r\n\t\t\t<path d='M499.5 332c0-5.66-3.112-11.13-8.203-14.07l-46.61-26.91C446.8 279.6 448 267.1 448 256s-1.242-23.65-3.34-35.02l46.61-26.91c5.092-2.941 8.203-8.411 8.203-14.07c0-14.1-41.98-99.04-63.86-99.04c-2.832 0-5.688 .7266-8.246 2.203l-46.72 26.98C362.9 94.98 342.4 83.1 320 75.16V21.28c0-7.523-5.162-14.28-12.53-15.82C290.8 1.977 273.7 0 256 0s-34.85 1.977-51.48 5.461C197.2 7.004 192 13.76 192 21.28v53.88C169.6 83.1 149.1 94.98 131.4 110.1L84.63 83.16C82.08 81.68 79.22 80.95 76.39 80.95c-19.72 0-63.86 81.95-63.86 99.04c0 5.66 3.112 11.13 8.203 14.07l46.61 26.91C65.24 232.4 64 244 64 256s1.242 23.65 3.34 35.02l-46.61 26.91c-5.092 2.941-8.203 8.411-8.203 14.07c0 14.1 41.98 99.04 63.86 99.04c2.832 0 5.688-.7266 8.246-2.203l46.72-26.98C149.1 417 169.6 428.9 192 436.8v53.88c0 7.523 5.162 14.28 12.53 15.82C221.2 510 238.3 512 255.1 512s34.85-1.977 51.48-5.461C314.8 504.1 320 498.2 320 490.7v-53.88c22.42-7.938 42.93-19.82 60.65-34.97l46.72 26.98c2.557 1.477 5.416 2.203 8.246 2.203C455.3 431 499.5 349.1 499.5 332zM256 336c-44.11 0-80-35.89-80-80S211.9 176 256 176s80 35.89 80 80S300.1 336 256 336z'></path>\r\n\t\t</StyledSVG>\r\n\t);\r\n};\r\n\r\nexport default GearIcon;\r\n","import styled from 'styled-components';\r\nimport PlayerInfo from './PlayerInfo';\r\nimport Button from '../Button';\r\nimport GearIcon from '../Icons/GearIcon';\r\n\r\nconst PlayerInfoControlsWrapper = styled.aside`\r\n\tgrid-area: controls;\r\n\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tbackground-color: #ffffff80;\r\n\tborder-radius: 1rem;\r\n\tbox-shadow: 0 12px 17px 2px rgba(0, 0, 0, 0.14),\r\n\t\t0 5px 22px 4px rgba(0, 0, 0, 0.12), 0 7px 8px -4px rgba(0, 0, 0, 0.2),\r\n\t\tinset 0 4px 5px 0 rgba(255, 255, 255, 0.14),\r\n\t\tinset 0 1px 10px 0 rgba(255, 255, 255, 0.12),\r\n\t\tinset 0 2px 4px -1px rgba(255, 255, 255, 0.2);\r\n\r\n\t@media (min-width: 1440px) {\r\n\t\talign-self: start;\r\n\t\tjustify-self: end;\r\n\t}\r\n`;\r\n\r\nconst Controls = styled.div`\r\n\tdisplay: flex;\r\n\tgap: 1rem;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tpadding: 1rem;\r\n`;\r\n\r\nconst StyledResetButton = styled(Button)`\r\n\tmin-width: 18rem;\r\n\r\n\t@media (min-height: 800px) {\r\n\t\tpadding: 2rem 3rem;\r\n\t}\r\n`;\r\n\r\nconst StyledSettingsButton = styled(Button)`\r\n\tpadding: 0.5rem 1rem 0;\r\n\theight: fit-content;\r\n`;\r\n\r\nconst Menu = ({\r\n\tgameComplete,\r\n\tresetBoardState,\r\n\tshowSettings,\r\n\tplayer1Wins,\r\n\tplayer2Wins,\r\n}) => {\r\n\treturn (\r\n\t\t<PlayerInfoControlsWrapper>\r\n\t\t\t<PlayerInfo player1Wins={player1Wins} player2Wins={player2Wins} />\r\n\t\t\t<Controls>\r\n\t\t\t\t<StyledResetButton clickHandler={resetBoardState}>\r\n\t\t\t\t\t{gameComplete ? 'New Game' : 'Reset Game'}\r\n\t\t\t\t</StyledResetButton>\r\n\t\t\t\t<StyledSettingsButton clickHandler={showSettings}>\r\n\t\t\t\t\t<GearIcon />\r\n\t\t\t\t</StyledSettingsButton>\r\n\t\t\t</Controls>\r\n\t\t</PlayerInfoControlsWrapper>\r\n\t);\r\n};\r\n\r\nexport default Menu;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledX = styled.div`\r\n\theight: 100%;\r\n\tposition: relative;\r\n`;\r\n\r\nconst XBar = styled.div`\r\n\tposition: absolute;\r\n\tleft: 50%;\r\n\ttop: 50%;\r\n\theight: 80%;\r\n\twidth: 0.8rem;\r\n\tborder-radius: 0.3rem;\r\n\tbackground-color: white;\r\n\tbox-shadow: 0 12px 17px 2px rgba(255, 255, 255, 0.14),\r\n\t\t0 5px 22px 4px rgba(255, 255, 255, 0.12),\r\n\t\t0 7px 8px -4px rgba(255, 255, 255, 0.2);\r\n\r\n\t@media (min-width: 800px) and (min-height: 800px) {\r\n\t\twidth: 1.5rem;\r\n\t}\r\n`;\r\n\r\nconst XBar1 = styled(XBar)`\r\n\ttransform: translate(-50%, -50%) rotate(45deg);\r\n`;\r\n\r\nconst XBar2 = styled(XBar)`\r\n\ttransform: translate(-50%, -50%) rotate(-45deg);\r\n`;\r\n\r\nconst X = ({ className }) => {\r\n\treturn (\r\n\t\t<StyledX className={className}>\r\n\t\t\t<XBar1 />\r\n\t\t\t<XBar2 />\r\n\t\t</StyledX>\r\n\t);\r\n};\r\n\r\nexport default X;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledO = styled.div`\r\n\theight: 100%;\r\n\tposition: relative;\r\n`;\r\n\r\nconst Outline = styled.div`\r\n\tposition: absolute;\r\n\tleft: 50%;\r\n\ttop: 50%;\r\n\theight: 80%;\r\n\twidth: 80%;\r\n\tborder: solid white 0.8rem;\r\n\tborder-radius: 80%;\r\n\ttransform: translate(-50%, -50%);\r\n\tbox-shadow: 0 12px 17px 2px rgba(255, 255, 255, 0.14),\r\n\t\t0 5px 22px 4px rgba(255, 255, 255, 0.12),\r\n\t\t0 7px 8px -4px rgba(255, 255, 255, 0.2);\r\n\r\n\t@media (min-width: 800px) and (min-height: 800px) {\r\n\t\tborder: solid white 1.5rem;\r\n\t}\r\n`;\r\n\r\nconst O = ({ className }) => {\r\n\treturn (\r\n\t\t<StyledO className={className}>\r\n\t\t\t<Outline />\r\n\t\t</StyledO>\r\n\t);\r\n};\r\n\r\nexport default O;\r\n","import { useCallback, useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport X from './X';\r\nimport O from './O';\r\n\r\nconst StyledGridCell = styled.div`\r\n\tposition: relative;\r\n\tbackground-color: #000000cc;\r\n\tborder-radius: 1rem;\r\n\tbox-shadow: inset 0 4px 5px 0 rgba(0, 0, 0, 0.14),\r\n\t\tinset 0 1px 10px 0 rgba(0, 0, 0, 0.12),\r\n\t\tinset 0 2px 4px -1px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst HoverArea = styled.div`\r\n\tposition: absolute;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\tbackground-color: transparent;\r\n\twidth: 75%;\r\n\theight: 75%;\r\n\ttransform: translate(-50%, -50%);\r\n\tz-index: 1;\r\n\tcursor: pointer;\r\n`;\r\n\r\nconst HoverX = styled(X)`\r\n\topacity: 0.75;\r\n\r\n\tdiv {\r\n\t\tbox-shadow: unset;\r\n\t}\r\n`;\r\n\r\nconst HoverO = styled(O)`\r\n\topacity: 0.75;\r\n\r\n\tdiv {\r\n\t\tbox-shadow: unset;\r\n\t}\r\n`;\r\n\r\nconst GridCell = ({\r\n\trow,\r\n\tcolumn,\r\n\tturnCounter,\r\n\toccupied,\r\n\toutput,\r\n\tgameComplete,\r\n\tsetSelected,\r\n}) => {\r\n\tconst [isHovered, setIsHovered] = useState(false);\r\n\tconst [XorO, setXorO] = useState('X');\r\n\r\n\tconst cellSelected = useCallback(\r\n\t\t(event) => {\r\n\t\t\tif (\r\n\t\t\t\tevent.type === 'click' ||\r\n\t\t\t\tevent.code === 'Enter' ||\r\n\t\t\t\tevent.code === 'Space'\r\n\t\t\t) {\r\n\t\t\t\tif (occupied === false && gameComplete === false) {\r\n\t\t\t\t\tsetSelected(row, column, XorO);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t[XorO, column, gameComplete, occupied, row, setSelected]\r\n\t);\r\n\r\n\tconst hoverCell = useCallback((event) => {\r\n\t\tif (event.type === 'mouseenter') {\r\n\t\t\tsetIsHovered(true);\r\n\t\t} else if (event.type === 'mouseleave') {\r\n\t\t\tsetIsHovered(false);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetXorO(turnCounter % 2 ? 'X' : 'O');\r\n\t}, [turnCounter]);\r\n\r\n\treturn (\r\n\t\t<StyledGridCell>\r\n\t\t\t<HoverArea\r\n\t\t\t\tonClick={cellSelected}\r\n\t\t\t\tonKeyPress={cellSelected}\r\n\t\t\t\tonMouseEnter={hoverCell}\r\n\t\t\t\tonMouseLeave={hoverCell}\r\n\t\t\t\ttabIndex='0'\r\n\t\t\t/>\r\n\t\t\t{(output === 'X' && <X />) ||\r\n\t\t\t\t(output === 'O' && <O />) ||\r\n\t\t\t\t(isHovered && XorO === 'X' && gameComplete === false && <HoverX />) ||\r\n\t\t\t\t(isHovered && XorO === 'O' && gameComplete === false && <HoverO />)}\r\n\t\t</StyledGridCell>\r\n\t);\r\n};\r\n\r\nexport default GridCell;\r\n","import styled, { keyframes } from 'styled-components';\r\nimport GridCell from './GridCell';\r\n\r\nconst flipAnimation = keyframes`\r\n\t0% {\r\n\t\t-webkit-transform: rotateY(0);\r\n\t\ttransform: rotateY(0);\r\n\t}\r\n\t100% {\r\n\t\t-webkit-transform: rotateY(180deg);\r\n\t\ttransform: rotateY(180deg);\r\n\t}\r\n`;\r\n\r\nconst StyledGrid = styled.div`\r\n\tgrid-area: grid;\r\n\r\n\tmin-width: 300px;\r\n\tmin-height: 300px;\r\n\tmax-width: 70vh;\r\n\tmax-height: 70vh;\r\n\r\n\tbackground-color: #ffffff80;\r\n\tpadding: 1.25rem;\r\n\tborder-radius: 1rem;\r\n\tbox-shadow: 0 12px 17px 2px rgba(0, 0, 0, 0.14),\r\n\t\t0 5px 22px 4px rgba(0, 0, 0, 0.12), 0 7px 8px -4px rgba(0, 0, 0, 0.2),\r\n\t\tinset 0 4px 5px 0 rgba(255, 255, 255, 0.14),\r\n\t\tinset 0 1px 10px 0 rgba(255, 255, 255, 0.12),\r\n\t\tinset 0 2px 4px -1px rgba(255, 255, 255, 0.2);\r\n\r\n\tdisplay: grid;\r\n\tgrid-template-rows: ${(props) => `repeat(${props.rows}, 1fr)`};\r\n\tgrid-template-columns: ${(props) => `repeat(${props.columns}, 1fr)`};\r\n\tgrid-gap: 0.8rem;\r\n\r\n\t/* animation: ${flipAnimation} 1s cubic-bezier(0.455, 0.03, 0.515, 0.955) both; */\r\n\r\n\t@media (min-width: 300px) {\r\n\t\twidth: 90vw;\r\n\t\theight: 90vw;\r\n\t}\r\n\r\n\t@media (min-width: 800px) and (min-height: 800px) {\r\n\t\tgrid-gap: 1.25rem;\r\n\t\tpadding: 2rem;\r\n\t\twidth: 80vw;\r\n\t\theight: 80vw;\r\n\t}\r\n`;\r\n\r\nconst createGridCells = (\r\n\trows,\r\n\tcolumns,\r\n\tboardState,\r\n\tturnCounter,\r\n\tgameComplete,\r\n\tsetSelected\r\n) => {\r\n\tlet gridCells = [];\r\n\r\n\tfor (let row = 0; row < rows; row++) {\r\n\t\tfor (let column = 0; column < columns; column++) {\r\n\t\t\tconst occupied = boardState[row][column] === '' ? false : true;\r\n\t\t\tconst output = occupied && boardState[row][column];\r\n\r\n\t\t\tgridCells.push(\r\n\t\t\t\t<GridCell\r\n\t\t\t\t\tkey={[row, column]}\r\n\t\t\t\t\trow={row}\r\n\t\t\t\t\tcolumn={column}\r\n\t\t\t\t\tturnCounter={turnCounter}\r\n\t\t\t\t\toccupied={occupied}\r\n\t\t\t\t\toutput={output}\r\n\t\t\t\t\tgameComplete={gameComplete}\r\n\t\t\t\t\tsetSelected={setSelected}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\treturn gridCells;\r\n};\r\n\r\nconst Grid = ({\r\n\trows,\r\n\tcolumns,\r\n\tboardState,\r\n\tturnCounter,\r\n\tgameComplete,\r\n\tupdateBoardState,\r\n}) => {\r\n\tconst setSelected = (row, column, XorO) =>\r\n\t\tupdateBoardState(row, column, XorO);\r\n\r\n\treturn (\r\n\t\t<StyledGrid rows={rows} columns={columns}>\r\n\t\t\t{createGridCells(\r\n\t\t\t\trows,\r\n\t\t\t\tcolumns,\r\n\t\t\t\tboardState,\r\n\t\t\t\tturnCounter,\r\n\t\t\t\tgameComplete,\r\n\t\t\t\tsetSelected\r\n\t\t\t)}\r\n\t\t</StyledGrid>\r\n\t);\r\n};\r\n\r\nexport default Grid;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledFooter = styled.footer`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tjustify-self: flex-end;\r\n\tposition: sticky;\r\n\ttop: 100vh;\r\n\r\n\tp {\r\n\t\tbackground-color: #000000cc;\r\n\t\tcolor: white;\r\n\t\tpadding: 0.25rem 1rem;\r\n\t\tborder-radius: 0.5rem 0.5rem 0 0;\r\n\t\tfont-size: 1.5rem;\r\n\r\n\t\ta {\r\n\t\t\ttext-decoration: none;\r\n\t\t\tcolor: inherit;\r\n\r\n\t\t\t&:hover {\r\n\t\t\t\ttext-decoration: underline;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<StyledFooter>\r\n\t\t\t<p>\r\n\t\t\t\t© <a href='https://github.com/TrevorLeeman'>Trevor Leeman</a> | 2021\r\n\t\t\t</p>\r\n\t\t</StyledFooter>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledGridCell = styled.div`\r\n\tbackground-color: #000000cc;\r\n\tborder-radius: 0.4rem;\r\n\tbox-shadow: inset 0 4px 5px 0 rgba(0, 0, 0, 0.14),\r\n\t\tinset 0 1px 10px 0 rgba(0, 0, 0, 0.12),\r\n\t\tinset 0 2px 4px -1px rgba(0, 0, 0, 0.2);\r\n\r\n\t@media (min-width: 400px) {\r\n\t\tborder-radius: 0.6rem;\r\n\t}\r\n`;\r\n\r\nconst GridCell = () => {\r\n\treturn <StyledGridCell />;\r\n};\r\n\r\nexport default GridCell;\r\n","import styled from 'styled-components';\r\nimport GridCell from './MiniGridCell';\r\n\r\nconst StyledGrid = styled.div`\r\n\twidth: 200px;\r\n\theight: 200px;\r\n\tbackground-color: #7051b8e6;\r\n\tpadding: 1.25rem;\r\n\tborder-radius: 1rem;\r\n\tbox-shadow: inset 0 4px 5px 0 rgba(255, 255, 255, 0.14),\r\n\t\tinset 0 1px 10px 0 rgba(255, 255, 255, 0.12),\r\n\t\tinset 0 2px 4px -1px rgba(255, 255, 255, 0.2);\r\n\r\n\tdisplay: grid;\r\n\tgrid-template-rows: ${(props) => `repeat(${props.rows}, 1fr)`};\r\n\tgrid-template-columns: ${(props) => `repeat(${props.columns}, 1fr)`};\r\n\tgrid-gap: 0.8rem;\r\n\r\n\tscroll-snap-align: center;\r\n\r\n\t@media (min-width: 400px) {\r\n\t\twidth: 300px;\r\n\t\theight: 300px;\r\n\t}\r\n\r\n\t@media (min-width: 600px) {\r\n\t\tgrid-gap: 0.5rem;\r\n\t\tpadding: 0.8rem;\r\n\t}\r\n`;\r\n\r\nconst createGridCells = (rows, columns) => {\r\n\tlet gridCells = [];\r\n\r\n\tfor (let row = 0; row < rows; row++) {\r\n\t\tfor (let column = 0; column < columns; column++) {\r\n\t\t\tgridCells.push(<GridCell key={[row, column]} />);\r\n\t\t}\r\n\t}\r\n\r\n\treturn gridCells;\r\n};\r\n\r\nconst MiniGrid = ({ rows, columns }) => {\r\n\treturn (\r\n\t\t<StyledGrid className='styledGrid' rows={rows} columns={columns}>\r\n\t\t\t{createGridCells(rows, columns)}\r\n\t\t</StyledGrid>\r\n\t);\r\n};\r\n\r\nexport default MiniGrid;\r\n","import styled from 'styled-components';\r\nimport MiniGrid from './MiniGrid/MiniGrid';\r\n\r\nconst GameSettingsWrapper = styled.form`\r\n\tdisplay: grid;\r\n\tgrid-template-columns: 1fr 1fr 1fr;\r\n\tpadding: 1rem 1rem 2rem;\r\n\tgap: 2rem;\r\n\toverflow: auto;\r\n\twidth: 100%;\r\n\tscroll-snap-type: x mandatory;\r\n\tuser-select: none;\r\n\r\n\t@media (min-width: 400px) {\r\n\t\tpadding: 2rem 2rem 3rem;\r\n\t}\r\n\r\n\t@media (min-width: 800px) and (max-width: 1440px) {\r\n\t\tgrid-template-columns: 1fr;\r\n\t}\r\n`;\r\n\r\nconst ModeWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tcursor: pointer;\r\n\ttransition: 0.1s ease-out;\r\n\r\n\t@media (min-width: 400px) {\r\n\t\t&:hover {\r\n\t\t\ttransform: scale(1.1);\r\n\t\t\ttransition: 0.1s ease-in;\r\n\r\n\t\t\t.styledGrid {\r\n\t\t\t\tbox-shadow: 0 12px 17px 2px rgba(0, 0, 0, 0.14),\r\n\t\t\t\t\t0 5px 22px 4px rgba(0, 0, 0, 0.12), 0 7px 8px -4px rgba(0, 0, 0, 0.2),\r\n\t\t\t\t\tinset 0 4px 5px 0 rgba(255, 255, 255, 0.14),\r\n\t\t\t\t\tinset 0 1px 10px 0 rgba(255, 255, 255, 0.12),\r\n\t\t\t\t\tinset 0 2px 4px -1px rgba(255, 255, 255, 0.2);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst GameSettings = ({ setBoardSize, setNumToWin, closeModal }) => {\r\n\tconst updateGridSize = (numRows, numColumns, numToWin) => {\r\n\t\tsetBoardSize(numRows, numColumns);\r\n\t\tsetNumToWin(numToWin);\r\n\t\tcloseModal();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<GameSettingsWrapper>\r\n\t\t\t<ModeWrapper onClick={() => updateGridSize(3, 3, 3)}>\r\n\t\t\t\t<h3>3x3</h3>\r\n\t\t\t\t<p>Win: 3 in a row</p>\r\n\t\t\t\t<MiniGrid rows={3} columns={3} />\r\n\t\t\t</ModeWrapper>\r\n\t\t\t<ModeWrapper onClick={() => updateGridSize(4, 4, 4)}>\r\n\t\t\t\t<h3>4x4</h3>\r\n\t\t\t\t<p>Win: 4 in a row</p>\r\n\t\t\t\t<MiniGrid rows={4} columns={4} />\r\n\t\t\t</ModeWrapper>\r\n\t\t\t<ModeWrapper onClick={() => updateGridSize(5, 5, 4)}>\r\n\t\t\t\t<h3>5x5</h3>\r\n\t\t\t\t<p>Win: 4 in a row</p>\r\n\r\n\t\t\t\t<MiniGrid rows={5} columns={5} />\r\n\t\t\t</ModeWrapper>\r\n\t\t</GameSettingsWrapper>\r\n\t);\r\n};\r\n\r\nexport default GameSettings;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledSVG = styled.svg`\r\n\ttransition: 200ms ease-out;\r\n\twidth: 3rem;\r\n\theight: 3rem;\r\n\tcursor: pointer;\r\n\r\n\tpath {\r\n\t\tstroke: grey;\r\n\t\tstroke-width: 2;\r\n\t}\r\n\r\n\t&:hover {\r\n\t\tpath {\r\n\t\t\tstroke: #7051b8;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst CloseIcon = ({ clickHandler }) => {\r\n\treturn (\r\n\t\t<StyledSVG\r\n\t\t\tonClick={clickHandler}\r\n\t\t\twidth='24'\r\n\t\t\theight='24'\r\n\t\t\tfill='none'\r\n\t\t\tviewBox='0 0 24 24'\r\n\t\t>\r\n\t\t\t<path\r\n\t\t\t\tstrokeLinecap='round'\r\n\t\t\t\tstrokeLinejoin='round'\r\n\t\t\t\td='M17.25 6.75L6.75 17.25'\r\n\t\t\t/>\r\n\t\t\t<path\r\n\t\t\t\tstrokeLinecap='round'\r\n\t\t\t\tstrokeLinejoin='round'\r\n\t\t\t\td='M6.75 6.75L17.25 17.25'\r\n\t\t\t/>\r\n\t\t</StyledSVG>\r\n\t);\r\n};\r\n\r\nexport default CloseIcon;\r\n","import styled from 'styled-components';\r\nimport GameSettings from './GameSettings';\r\nimport CloseIcon from '../Icons/CloseIcon';\r\n\r\nconst ModalBackground = styled.div`\r\n\tz-index: 998;\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-color: rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nconst PositionModal = styled.div`\r\n\tz-index: 999;\r\n\tposition: absolute;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\ttransform: translate(-50%, -50%);\r\n`;\r\n\r\nconst StyledModal = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tpadding: 1rem;\r\n\tborder-radius: 1rem;\r\n\tmax-width: 90vw;\r\n\tbackground-color: white;\r\n\toverflow: auto;\r\n\tfont-size: 2rem;\r\n\tmax-height: 70vh;\r\n\r\n\tbox-shadow: 0 12px 17px 2px rgba(0, 0, 0, 0.14),\r\n\t\t0 5px 22px 4px rgba(0, 0, 0, 0.12), 0 7px 8px -4px rgba(0, 0, 0, 0.2),\r\n\t\tinset 0 4px 5px 0 rgba(255, 255, 255, 0.14),\r\n\t\tinset 0 1px 10px 0 rgba(255, 255, 255, 0.12),\r\n\t\tinset 0 2px 4px -1px rgba(255, 255, 255, 0.2);\r\n\r\n\t@media (min-width: 1440px) {\r\n\t\tpadding: 2rem;\r\n\t}\r\n`;\r\n\r\nconst TitleCloseWrap = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\tpadding-left: 1rem;\r\n\r\n\t@media (min-width: 400px) {\r\n\t\tpadding-left: 2rem;\r\n\t}\r\n`;\r\n\r\nconst Modal = ({ closeSettings, setBoardSize, setConsecutiveToWin }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<PositionModal>\r\n\t\t\t\t<StyledModal>\r\n\t\t\t\t\t<TitleCloseWrap>\r\n\t\t\t\t\t\t<h2>Select Mode</h2>\r\n\t\t\t\t\t\t<CloseIcon clickHandler={closeSettings} />\r\n\t\t\t\t\t</TitleCloseWrap>\r\n\t\t\t\t\t<GameSettings\r\n\t\t\t\t\t\tsetBoardSize={setBoardSize}\r\n\t\t\t\t\t\tsetNumToWin={setConsecutiveToWin}\r\n\t\t\t\t\t\tcloseModal={closeSettings}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</StyledModal>\r\n\t\t\t</PositionModal>\r\n\t\t\t<ModalBackground onClick={closeSettings} />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Modal;\r\n","export const createInitialBoardState = (rows, columns) => {\r\n\t// Initialize 2d boardState array\r\n\tlet initialBoardState = [];\r\n\r\n\tfor (let row = 0; row < rows; row++) {\r\n\t\tinitialBoardState[row] = [];\r\n\t\tfor (let column = 0; column < columns; column++) {\r\n\t\t\tinitialBoardState[row][column] = '';\r\n\t\t}\r\n\t}\r\n\r\n\treturn initialBoardState;\r\n};\r\n\r\nexport const createDiagonalBoardState = (rows, columns) => {\r\n\t// Initialize 2d boardState array\r\n\tlet diagonals = [];\r\n\r\n\tfor (let i = 0; i < rows + columns - 1; i++) {\r\n\t\tdiagonals.push([]);\r\n\t}\r\n\r\n\treturn diagonals;\r\n};\r\n\r\nexport const checkBoardState = (currentBoardState, lengthReqForWin) => {\r\n\tlet gameIsWon = false;\r\n\tlet winner = null;\r\n\r\n\t// Loop through our 2d board state array\r\n\tfor (let currentRow of currentBoardState) {\r\n\t\tlet inARow = 0;\r\n\t\tlet XorO = '';\r\n\t\tfor (let tileValue of currentRow) {\r\n\t\t\tif (tileValue === XorO && tileValue !== '') {\r\n\t\t\t\t// If current tile is same as previous\r\n\t\t\t\tinARow++;\r\n\r\n\t\t\t\tif (inARow === lengthReqForWin) {\r\n\t\t\t\t\t// If we've reached a winning state\r\n\t\t\t\t\tgameIsWon = true;\r\n\t\t\t\t\twinner = XorO;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Reset our tracking array with new starting value\r\n\t\t\t\tinARow = 1;\r\n\t\t\t\tXorO = tileValue;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn [gameIsWon, winner];\r\n};\r\n\r\nexport const checkColumns = (\r\n\tcurrentBoardState,\r\n\trowLen,\r\n\tcolumnLen,\r\n\tlengthReqForWin\r\n) => {\r\n\tlet columnBasedBoardState = createInitialBoardState(rowLen, columnLen);\r\n\r\n\t// Convert 2d row array to 2d column array\r\n\tfor (let [i, currentRow] of currentBoardState.entries()) {\r\n\t\tfor (let [j, XorO] of currentRow.entries()) {\r\n\t\t\tcolumnBasedBoardState[j][i] = XorO;\r\n\t\t}\r\n\t}\r\n\r\n\tconst columnWin = checkBoardState(columnBasedBoardState, lengthReqForWin);\r\n\r\n\treturn columnWin;\r\n};\r\n\r\nexport const checkDiagonals = (\r\n\tcurrentBoardState,\r\n\trowLen,\r\n\tcolumnLen,\r\n\tlengthReqForWin\r\n) => {\r\n\tlet downLeftDiagonalBoardState = createDiagonalBoardState(rowLen, columnLen);\r\n\tlet downRightDiagonalBoardState = createDiagonalBoardState(rowLen, columnLen);\r\n\r\n\t// Convert 2d row array to 2d diagonal arrays\r\n\tfor (let [i, currentRow] of currentBoardState.entries()) {\r\n\t\tfor (let [j, XorO] of currentRow.entries()) {\r\n\t\t\tdownLeftDiagonalBoardState[i + j].push(XorO);\r\n\t\t\tdownRightDiagonalBoardState[i - j + rowLen - 1].push(XorO);\r\n\t\t}\r\n\t}\r\n\r\n\tconst bothDiagonals = [\r\n\t\t...downLeftDiagonalBoardState,\r\n\t\t...downRightDiagonalBoardState,\r\n\t].filter((diagonalArr) => diagonalArr.length >= lengthReqForWin);\r\n\r\n\tconst diagonalWin = checkBoardState(bothDiagonals, lengthReqForWin);\r\n\r\n\treturn diagonalWin;\r\n};\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\nimport Header from './UI/Header';\r\nimport Menu from './UI/Menu/Menu';\r\nimport Grid from './Grid/Grid';\r\nimport Footer from './UI/Footer';\r\nimport Modal from './UI/Modal/Modal';\r\nimport {\r\n\tcreateInitialBoardState,\r\n\tcheckBoardState,\r\n\tcheckColumns,\r\n\tcheckDiagonals,\r\n} from './Game/GameLogic';\r\n\r\nconst CssReset = createGlobalStyle`\r\n  *{\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  html{\r\n\tfont-family: 'Saira Condensed', sans-serif;\r\n\r\n\tfont-size: 0.6em;\r\n\r\n\t@media (min-width: 420px) {\r\n\t\tfont-size: 0.8em;\r\n\t}\r\n\r\n\t@media (min-width: 600px) {\r\n\t\tfont-size: 1em;\r\n\t}\r\n  }\r\n`;\r\n\r\nconst AppContainer = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tmin-width: 300px;\r\n\toverflow: auto;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\r\n\tbackground: linear-gradient(\r\n\t\t270deg,\r\n\t\t#f94144,\r\n\t\t#f3722c,\r\n\t\t#f8961e,\r\n\t\t#f9844a,\r\n\t\t#f9c74f,\r\n\t\t#90be6d,\r\n\t\t#43aa8b,\r\n\t\t#4d908e,\r\n\t\t#577590,\r\n\t\t#277da1\r\n\t);\r\n\r\n\tbackground-size: 1000% 1000%;\r\n\r\n\tanimation: animatedGradient 20s ease infinite;\r\n\r\n\t@keyframes animatedGradient {\r\n\t\t0% {\r\n\t\t\tbackground-position: 0% 50%;\r\n\t\t}\r\n\t\t50% {\r\n\t\t\tbackground-position: 100% 50%;\r\n\t\t}\r\n\t\t100% {\r\n\t\t\tbackground-position: 0% 50%;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst StyledApp = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-rows: fit-content 1fr;\r\n\tgrid-template-columns: 1fr;\r\n\tgrid-template-areas:\r\n\t\t'controls'\r\n\t\t'grid';\r\n\tgap: 2rem;\r\n\tplace-items: center;\r\n\tpadding: 2rem 0;\r\n\r\n\t@media (min-width: 400px) {\r\n\t\tpadding: 2rem;\r\n\t}\r\n\r\n\t@media (min-width: 1440px) {\r\n\t\tgrid-template-rows: 1fr;\r\n\t\tgrid-template-columns: 1fr 1fr 1fr;\r\n\t\tgrid-template-areas: 'controls grid .';\r\n\t}\r\n`;\r\n\r\nconst App = () => {\r\n\tconst [rows, setRows] = useState(3);\r\n\tconst [columns, setColumns] = useState(3);\r\n\tconst [lengthReqForWin, setLengthReqForWin] = useState(3);\r\n\tconst [boardState, setBoardState] = useState(\r\n\t\tcreateInitialBoardState(rows, columns)\r\n\t);\r\n\tconst [firstTurn, setFirstTurn] = useState(1);\r\n\tconst [turnCounter, setTurnCounter] = useState(firstTurn);\r\n\tconst [gameComplete, setGameComplete] = useState(false);\r\n\tconst [modalActive, setModalActive] = useState(false);\r\n\tconst [player1WinCount, setPlayer1WinCount] = useState(0);\r\n\tconst [player2WinCount, setPlayer2WinCount] = useState(0);\r\n\r\n\tconst resetBoardState = useCallback(\r\n\t\t(\r\n\t\t\tevent,\r\n\t\t\tnumRows = rows,\r\n\t\t\tnumColumns = columns,\r\n\t\t\tincrementFirstTurn = gameComplete ? true : false\r\n\t\t) => {\r\n\t\t\tsetBoardState(createInitialBoardState(numRows, numColumns));\r\n\t\t\tsetGameComplete(false);\r\n\r\n\t\t\t// Pass in true if you want to increment first turn while reseting board\r\n\t\t\tif (incrementFirstTurn) {\r\n\t\t\t\tsetTurnCounter(firstTurn + 1);\r\n\t\t\t\tsetFirstTurn((currentValue) => currentValue + 1);\r\n\t\t\t} else {\r\n\t\t\t\tsetTurnCounter(firstTurn);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[columns, firstTurn, gameComplete, rows]\r\n\t);\r\n\r\n\tconst updateBoardState = useCallback((row, column, XorO) => {\r\n\t\tsetBoardState((currentBoardState) => {\r\n\t\t\tlet newBoardState = [...currentBoardState];\r\n\t\t\tnewBoardState[row][column] = XorO;\r\n\t\t\treturn newBoardState;\r\n\t\t});\r\n\r\n\t\tsetTurnCounter((currentTurnCount) => currentTurnCount + 1);\r\n\t}, []);\r\n\r\n\tconst toggleModal = useCallback(() => {\r\n\t\treturn modalActive ? setModalActive(false) : setModalActive(true);\r\n\t}, [modalActive]);\r\n\r\n\tconst updateBoardSize = useCallback(\r\n\t\t(numRows, numColumns) => {\r\n\t\t\tsetRows(numRows);\r\n\t\t\tsetColumns(numColumns);\r\n\t\t\tresetBoardState(null, numRows, numColumns);\r\n\t\t},\r\n\t\t[resetBoardState]\r\n\t);\r\n\r\n\t// Check for winner when board state changes\r\n\tuseEffect(() => {\r\n\t\tconst [rowWin, rowWinner] = checkBoardState(boardState, lengthReqForWin);\r\n\t\tconst [columnWin, columnWinner] = checkColumns(\r\n\t\t\tboardState,\r\n\t\t\tcolumns,\r\n\t\t\trows,\r\n\t\t\tlengthReqForWin\r\n\t\t);\r\n\t\tconst [diagonalWin, diagonalWinner] = checkDiagonals(\r\n\t\t\tboardState,\r\n\t\t\tcolumns,\r\n\t\t\trows,\r\n\t\t\tlengthReqForWin\r\n\t\t);\r\n\r\n\t\tif (\r\n\t\t\trowWin ||\r\n\t\t\tcolumnWin ||\r\n\t\t\tdiagonalWin ||\r\n\t\t\tturnCounter - firstTurn === rows * columns\r\n\t\t) {\r\n\t\t\tsetGameComplete(true);\r\n\t\t\tif (rowWinner === 'X' || columnWinner === 'X' || diagonalWinner === 'X') {\r\n\t\t\t\tsetPlayer1WinCount((currentWinCount) => currentWinCount + 1);\r\n\t\t\t} else if (\r\n\t\t\t\trowWinner === 'O' ||\r\n\t\t\t\tcolumnWinner === 'O' ||\r\n\t\t\t\tdiagonalWinner === 'O'\r\n\t\t\t) {\r\n\t\t\t\tsetPlayer2WinCount((currentWinCount) => currentWinCount + 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [boardState, columns, firstTurn, lengthReqForWin, rows, turnCounter]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<CssReset />\r\n\t\t\t<AppContainer>\r\n\t\t\t\t<Header title='React-Tac-Toe' />\r\n\t\t\t\t<StyledApp>\r\n\t\t\t\t\t<Menu\r\n\t\t\t\t\t\tgameComplete={gameComplete}\r\n\t\t\t\t\t\tresetBoardState={resetBoardState}\r\n\t\t\t\t\t\tshowSettings={toggleModal}\r\n\t\t\t\t\t\tplayer1Wins={player1WinCount}\r\n\t\t\t\t\t\tplayer2Wins={player2WinCount}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\trows={rows}\r\n\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\tboardState={boardState}\r\n\t\t\t\t\t\tturnCounter={turnCounter}\r\n\t\t\t\t\t\tgameComplete={gameComplete}\r\n\t\t\t\t\t\tupdateBoardState={updateBoardState}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</StyledApp>\r\n\t\t\t\t<Footer />\r\n\t\t\t\t{modalActive && (\r\n\t\t\t\t\t<Modal\r\n\t\t\t\t\t\tcloseSettings={toggleModal}\r\n\t\t\t\t\t\tsetBoardSize={updateBoardSize}\r\n\t\t\t\t\t\tsetConsecutiveToWin={setLengthReqForWin}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</AppContainer>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}