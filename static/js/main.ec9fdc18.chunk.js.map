{"version":3,"sources":["UI/Icons/CircleSVG.js","UI/Icons/LinkedInIcon.js","UI/Icons/GitHubIcon.js","UI/SocialList.js","UI/Header.js","UI/Menu/Player.js","UI/Menu/PlayerInfo.js","UI/Button.js","UI/Icons/GearIcon.js","UI/Menu/Menu.js","Grid/X.js","Grid/O.js","Grid/GridCell.js","Grid/Grid.js","UI/Footer.js","UI/Modal/MiniGrid/MiniGridCell.js","UI/Modal/MiniGrid/MiniGrid.js","UI/Modal/GameSettings.js","UI/Icons/CloseIcon.js","UI/Modal/Modal.js","Game/GameLogic.js","App.js","index.js"],"names":["CircleSVG","styled","svg","StyledSVG","LinkedInIcon","xmlns","viewBox","d","GitHubIcon","StyledSocialCard","footer","SocialCard","className","href","title","StyledHeader","header","StyledAppTitle","h1","Header","SocialList","StyledPlayer","div","props","turnActive","win","StyledPlayerName","h2","Score","checkInputLength","event","target","innerText","length","key","preventDefault","Player","name","score","useState","playerName","setPlayerName","onKeyPress","onBlur","contentEditable","suppressContentEditableWarning","PlayerInfoWrapper","PlayerInfo","player1Wins","player2Wins","turnCounter","player1Win","player2Win","StyledButton","button","Button","children","clickHandler","onClick","GearIcon","focusable","role","PlayerInfoControlsWrapper","aside","Controls","StyledResetButton","StyledSettingsButton","Menu","gameComplete","resetBoardState","showSettings","StyledX","XBar","gridRows","XBar1","XBar2","X","StyledO","Outline","O","StyledGridCell","HoverArea","HoverX","HoverO","GridCell","row","column","occupied","output","setSelected","isHovered","setIsHovered","XorO","setXorO","cellSelected","useCallback","type","code","hoverCell","useEffect","onMouseEnter","onMouseLeave","tabIndex","StyledGrid","gridColumns","createGridCells","boardState","gridCells","push","Grid","updateBoardState","StyledFooter","Footer","rows","columns","MiniGrid","GameSettingsWrapper","form","ModeWrapper","GameSettings","setBoardSize","setNumToWin","closeModal","globalRows","updateGridSize","numRows","numColumns","numToWin","CloseIcon","width","height","fill","strokeLinecap","strokeLinejoin","ModalBackground","PositionModal","StyledModal","TitleCloseWrap","Modal","closeSettings","setConsecutiveToWin","createInitialBoardState","initialBoardState","createDiagonalBoardState","diagonals","i","checkBoardState","currentBoardState","lengthReqForWin","gameIsWon","winner","currentRow","inARow","tileValue","CssReset","createGlobalStyle","AppContainer","StyledApp","App","setRows","setColumns","setLengthReqForWin","setBoardState","firstTurn","setFirstTurn","setTurnCounter","setGameComplete","modalActive","setModalActive","setPlayer1Win","setPlayer2Win","player1WinCount","setPlayer1WinCount","player2WinCount","setPlayer2WinCount","currentValue","newBoardState","currentTurnCount","toggleModal","updateBoardSize","rowWin","rowWinner","rowLen","columnLen","columnBasedBoardState","entries","j","checkColumns","columnWin","columnWinner","downLeftDiagonalBoardState","downRightDiagonalBoardState","bothDiagonals","filter","diagonalArr","checkDiagonals","diagonalWin","diagonalWinner","currentWinCount","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec9fdc18.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst CircleSVG = styled.svg`\r\n\ttransition: all 0.5s ease;\r\n\tborder-radius: 50%;\r\n\r\n\t&:hover {\r\n\t\tbox-shadow: 0 4px 5px 0 rgba(0, 0, 0, 0.14),\r\n\t\t\t0 1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.2);\r\n\t}\r\n`;\r\n\r\nexport default CircleSVG;\r\n","import styled from 'styled-components';\r\nimport CircleSVG from './CircleSVG';\r\n\r\nconst StyledSVG = styled(CircleSVG)`\r\n\t&:hover {\r\n\t\tfill: #2867b2;\r\n\t}\r\n`;\r\n\r\nconst LinkedInIcon = () => {\r\n\treturn (\r\n\t\t<StyledSVG xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'>\r\n\t\t\t<path d='M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm-2 16h-2v-6h2v6zm-1-6.891c-.607 0-1.1-.496-1.1-1.109 0-.612.492-1.109 1.1-1.109s1.1.497 1.1 1.109c0 .613-.493 1.109-1.1 1.109zm8 6.891h-1.998v-2.861c0-1.881-2.002-1.722-2.002 0v2.861h-2v-6h2v1.093c.872-1.616 4-1.736 4 1.548v3.359z' />\r\n\t\t</StyledSVG>\r\n\t);\r\n};\r\n\r\nexport default LinkedInIcon;\r\n","import styled from 'styled-components';\r\nimport CircleSVG from './CircleSVG';\r\n\r\nconst StyledSVG = styled(CircleSVG)`\r\n\t&:hover {\r\n\t\tfill: #6cc644;\r\n\t}\r\n`;\r\n\r\nconst GitHubIcon = () => {\r\n\treturn (\r\n\t\t<StyledSVG xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'>\r\n\t\t\t<path d='M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z' />\r\n\t\t</StyledSVG>\r\n\t);\r\n};\r\n\r\nexport default GitHubIcon;\r\n","import styled from 'styled-components';\r\nimport LinkedInIcon from './Icons/LinkedInIcon';\r\nimport GitHubIcon from './Icons/GitHubIcon';\r\n\r\nconst StyledSocialCard = styled.footer`\r\n\tul {\r\n\t\tdisplay: flex;\r\n\t\tgap: 1rem;\r\n\t\tlist-style: none;\r\n\r\n\t\tli {\r\n\t\t\twidth: 4rem;\r\n\t\t\twidth: 4rem;\r\n\t\t\ttransition: all 0.5s ease;\r\n\r\n\t\t\t&:hover {\r\n\t\t\t\ttransform: scale(1.1);\r\n\t\t\t}\r\n\r\n\t\t\tsvg {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\r\n\t\t\t@media (min-width: 800px) and (min-height: 800px) {\r\n\t\t\t\twidth: 5rem;\r\n\t\t\t\twidth: 5rem;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst SocialCard = ({ className }) => {\r\n\treturn (\r\n\t\t<StyledSocialCard className={className}>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref='https://github.com/TrevorLeeman'\r\n\t\t\t\t\t\ttitle='Trevor Leeman on GitHub'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<GitHubIcon />\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref='https://www.linkedin.com/in/trevor-leeman/'\r\n\t\t\t\t\t\ttitle='Trevor Leeman on LinkedIn'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<LinkedInIcon />\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</StyledSocialCard>\r\n\t);\r\n};\r\n\r\nexport default SocialCard;\r\n","import styled from 'styled-components';\r\nimport SocialList from './SocialList';\r\n\r\nconst StyledHeader = styled.header`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\tflex-wrap: wrap;\r\n\tgap: 1rem;\r\n\twidth: 100%;\r\n\tpadding: 2rem;\r\n\tbackground-color: #f7f7f7;\r\n\tbox-shadow: 0 12px 17px 2px rgba(0, 0, 0, 0.14),\r\n\t\t0 5px 22px 4px rgba(0, 0, 0, 0.12), 0 7px 8px -4px rgba(0, 0, 0, 0.2);\r\n\r\n\t@media (min-width: 420px) {\r\n\t\tpadding: 1rem;\r\n\t\tmin-height: unset;\r\n\t}\r\n`;\r\n\r\nconst StyledAppTitle = styled.h1`\r\n\tvertical-align: middle;\r\n\tfont-size: 3rem;\r\n\tfont-family: 'Anton', sans-serif;\r\n\tfont-weight: 700;\r\n\tletter-spacing: 2pt;\r\n`;\r\n\r\nconst Header = ({ title }) => {\r\n\treturn (\r\n\t\t<StyledHeader>\r\n\t\t\t<StyledAppTitle>{title}</StyledAppTitle>\r\n\t\t\t<SocialList />\r\n\t\t</StyledHeader>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledPlayer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\twidth: fit-content;\r\n\tfont-size: 1.5rem;\r\n\tpadding: 0.75rem;\r\n\tborder-radius: 0.75rem;\r\n\tborder: 0.5rem solid transparent;\r\n\ttransition: all 200ms ease-out;\r\n\r\n\t${(props) => props.turnActive && `border-color:#7051b8;`}\r\n\t${(props) => props.win && 'border-color: #109648;'}\r\n`;\r\n\r\nconst StyledPlayerName = styled.h2``;\r\n\r\nconst Score = styled.div`\r\n\tfont-size: 3rem;\r\n`;\r\n\r\nconst checkInputLength = (event) => {\r\n\tif (event.target.innerText.length <= 12 && event.key !== 'Enter') {\r\n\t\treturn true;\r\n\t} else {\r\n\t\tevent.preventDefault();\r\n\t\treturn false;\r\n\t}\r\n};\r\n\r\nconst Player = ({ name, score, turnActive, win }) => {\r\n\tconst [playerName, setPlayerName] = useState(name);\r\n\r\n\tconst updatePlayerName = (event) => {\r\n\t\tsetPlayerName(event.target.innerText);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StyledPlayer turnActive={turnActive} win={win}>\r\n\t\t\t<StyledPlayerName\r\n\t\t\t\tonKeyPress={checkInputLength}\r\n\t\t\t\tonBlur={updatePlayerName}\r\n\t\t\t\tcontentEditable='true'\r\n\t\t\t\tsuppressContentEditableWarning={true}\r\n\t\t\t>\r\n\t\t\t\t{playerName}\r\n\t\t\t</StyledPlayerName>\r\n\t\t\t<Score>{score}</Score>\r\n\t\t</StyledPlayer>\r\n\t);\r\n};\r\n\r\nexport default Player;\r\n","import styled from 'styled-components';\r\nimport Player from './Player';\r\n\r\nconst PlayerInfoWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-around;\r\n\twidth: 100%;\r\n\tbackground-color: #f7f7f7;\r\n\tpadding: 1rem;\r\n\tborder-radius: 1rem 1rem 0 0;\r\n`;\r\n\r\nconst PlayerInfo = ({\r\n\tplayer1Wins,\r\n\tplayer2Wins,\r\n\tturnCounter,\r\n\tplayer1Win,\r\n\tplayer2Win,\r\n}) => {\r\n\treturn (\r\n\t\t<PlayerInfoWrapper>\r\n\t\t\t<Player\r\n\t\t\t\tname='Player (X)'\r\n\t\t\t\tscore={player1Wins}\r\n\t\t\t\tturnActive={turnCounter % 2}\r\n\t\t\t\twin={player1Win}\r\n\t\t\t/>\r\n\t\t\t<Player\r\n\t\t\t\tname='Player (O)'\r\n\t\t\t\tscore={player2Wins}\r\n\t\t\t\tturnActive={!(turnCounter % 2)}\r\n\t\t\t\twin={player2Win}\r\n\t\t\t/>\r\n\t\t</PlayerInfoWrapper>\r\n\t);\r\n};\r\n\r\nexport default PlayerInfo;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button`\r\n\tposition: relative;\r\n\ttop: 0;\r\n\tdisplay: inline-block;\r\n\tborder: 0;\r\n\tpadding: 1rem 2rem;\r\n\tborder-radius: 1rem;\r\n\tcursor: pointer;\r\n\r\n\tbackground-color: #7051b8;\r\n\tcolor: white;\r\n\tbox-shadow: 0 1rem 0 #553795;\r\n\r\n\tfont-size: 2rem;\r\n\tfont-family: 'Saira Condensed', sans-serif;\r\n\tfont-weight: 700;\r\n\tletter-spacing: 2pt;\r\n\twhite-space: nowrap;\r\n\tmargin-bottom: 1rem;\r\n\r\n\ttransition: all 0.2s;\r\n\r\n\t&:hover {\r\n\t\ttop: 0.1rem;\r\n\t\tbox-shadow: 0 0.9rem 0px #553795;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t&:active {\r\n\t\ttop: 1rem;\r\n\t\tbox-shadow: 0 2px 0px #553795;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n`;\r\n\r\nconst Button = ({ children, className, clickHandler }) => {\r\n\treturn (\r\n\t\t<StyledButton className={className} onClick={clickHandler}>\r\n\t\t\t{children}\r\n\t\t</StyledButton>\r\n\t);\r\n};\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledSVG = styled.svg`\r\n\ttransition: 200ms ease-out;\r\n\twidth: 2rem;\r\n\theight: 2rem;\r\n\tcursor: pointer;\r\n\r\n\tpath {\r\n\t\tfill: white;\r\n\t}\r\n`;\r\n\r\nconst GearIcon = () => {\r\n\treturn (\r\n\t\t<StyledSVG\r\n\t\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t\taria-hidden='true'\r\n\t\t\tfocusable='false'\r\n\t\t\tdata-prefix='fas'\r\n\t\t\trole='img'\r\n\t\t\tviewBox='0 0 512 512'\r\n\t\t>\r\n\t\t\t<path d='M499.5 332c0-5.66-3.112-11.13-8.203-14.07l-46.61-26.91C446.8 279.6 448 267.1 448 256s-1.242-23.65-3.34-35.02l46.61-26.91c5.092-2.941 8.203-8.411 8.203-14.07c0-14.1-41.98-99.04-63.86-99.04c-2.832 0-5.688 .7266-8.246 2.203l-46.72 26.98C362.9 94.98 342.4 83.1 320 75.16V21.28c0-7.523-5.162-14.28-12.53-15.82C290.8 1.977 273.7 0 256 0s-34.85 1.977-51.48 5.461C197.2 7.004 192 13.76 192 21.28v53.88C169.6 83.1 149.1 94.98 131.4 110.1L84.63 83.16C82.08 81.68 79.22 80.95 76.39 80.95c-19.72 0-63.86 81.95-63.86 99.04c0 5.66 3.112 11.13 8.203 14.07l46.61 26.91C65.24 232.4 64 244 64 256s1.242 23.65 3.34 35.02l-46.61 26.91c-5.092 2.941-8.203 8.411-8.203 14.07c0 14.1 41.98 99.04 63.86 99.04c2.832 0 5.688-.7266 8.246-2.203l46.72-26.98C149.1 417 169.6 428.9 192 436.8v53.88c0 7.523 5.162 14.28 12.53 15.82C221.2 510 238.3 512 255.1 512s34.85-1.977 51.48-5.461C314.8 504.1 320 498.2 320 490.7v-53.88c22.42-7.938 42.93-19.82 60.65-34.97l46.72 26.98c2.557 1.477 5.416 2.203 8.246 2.203C455.3 431 499.5 349.1 499.5 332zM256 336c-44.11 0-80-35.89-80-80S211.9 176 256 176s80 35.89 80 80S300.1 336 256 336z'></path>\r\n\t\t</StyledSVG>\r\n\t);\r\n};\r\n\r\nexport default GearIcon;\r\n","import styled from 'styled-components';\r\nimport PlayerInfo from './PlayerInfo';\r\nimport Button from '../Button';\r\nimport GearIcon from '../Icons/GearIcon';\r\n\r\nconst PlayerInfoControlsWrapper = styled.aside`\r\n\tgrid-area: controls;\r\n\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tbackground-color: #ffffff80;\r\n\tborder-radius: 1rem;\r\n\tbox-shadow: 0 12px 17px 2px rgba(0, 0, 0, 0.14),\r\n\t\t0 5px 22px 4px rgba(0, 0, 0, 0.12), 0 7px 8px -4px rgba(0, 0, 0, 0.2),\r\n\t\tinset 0 4px 5px 0 rgba(255, 255, 255, 0.14),\r\n\t\tinset 0 1px 10px 0 rgba(255, 255, 255, 0.12),\r\n\t\tinset 0 2px 4px -1px rgba(255, 255, 255, 0.2);\r\n\r\n\t@media (min-width: 1440px) {\r\n\t\talign-self: start;\r\n\t\tjustify-self: end;\r\n\t}\r\n`;\r\n\r\nconst Controls = styled.div`\r\n\tdisplay: flex;\r\n\tgap: 1rem;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tpadding: 1rem;\r\n`;\r\n\r\nconst StyledResetButton = styled(Button)`\r\n\tmin-width: 18rem;\r\n\r\n\t@media (min-height: 800px) {\r\n\t\tpadding: 2rem 3rem;\r\n\t}\r\n`;\r\n\r\nconst StyledSettingsButton = styled(Button)`\r\n\tpadding: 0.5rem 1rem 0;\r\n\theight: fit-content;\r\n`;\r\n\r\nconst Menu = ({\r\n\tgameComplete,\r\n\tresetBoardState,\r\n\tshowSettings,\r\n\tplayer1Wins,\r\n\tplayer2Wins,\r\n\tturnCounter,\r\n\tplayer1Win,\r\n\tplayer2Win,\r\n}) => {\r\n\treturn (\r\n\t\t<PlayerInfoControlsWrapper>\r\n\t\t\t<PlayerInfo\r\n\t\t\t\tplayer1Wins={player1Wins}\r\n\t\t\t\tplayer2Wins={player2Wins}\r\n\t\t\t\tturnCounter={turnCounter}\r\n\t\t\t\tplayer1Win={player1Win}\r\n\t\t\t\tplayer2Win={player2Win}\r\n\t\t\t/>\r\n\t\t\t<Controls>\r\n\t\t\t\t<StyledResetButton\r\n\t\t\t\t\tclickHandler={resetBoardState}\r\n\t\t\t\t\tgameComplete={gameComplete}\r\n\t\t\t\t>\r\n\t\t\t\t\t{gameComplete ? 'New Game' : 'Reset Game'}\r\n\t\t\t\t</StyledResetButton>\r\n\t\t\t\t<StyledSettingsButton clickHandler={showSettings}>\r\n\t\t\t\t\t<GearIcon />\r\n\t\t\t\t</StyledSettingsButton>\r\n\t\t\t</Controls>\r\n\t\t</PlayerInfoControlsWrapper>\r\n\t);\r\n};\r\n\r\nexport default Menu;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledX = styled.div`\r\n\theight: 100%;\r\n\tposition: relative;\r\n`;\r\n\r\nconst XBar = styled.div`\r\n\tposition: absolute;\r\n\tleft: 50%;\r\n\ttop: 50%;\r\n\theight: 80%;\r\n\tborder-radius: 0.3rem;\r\n\tbackground-color: white;\r\n\tbox-shadow: 0 12px 17px 2px rgba(255, 255, 255, 0.14),\r\n\t\t0 5px 22px 4px rgba(255, 255, 255, 0.12),\r\n\t\t0 7px 8px -4px rgba(255, 255, 255, 0.2);\r\n\r\n\twidth: ${(props) =>\r\n\t\t(props.gridRows === 3 && '1.5rem') ||\r\n\t\t(props.gridRows === 5 && '1.15rem') ||\r\n\t\t(props.gridRows === 7 && '0.8rem')};\r\n`;\r\n\r\nconst XBar1 = styled(XBar)`\r\n\ttransform: translate(-50%, -50%) rotate(45deg);\r\n`;\r\n\r\nconst XBar2 = styled(XBar)`\r\n\ttransform: translate(-50%, -50%) rotate(-45deg);\r\n`;\r\n\r\nconst X = ({ className, gridRows }) => {\r\n\treturn (\r\n\t\t<StyledX className={className}>\r\n\t\t\t<XBar1 gridRows={gridRows} />\r\n\t\t\t<XBar2 gridRows={gridRows} />\r\n\t\t</StyledX>\r\n\t);\r\n};\r\n\r\nexport default X;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledO = styled.div`\r\n\theight: 100%;\r\n\tposition: relative;\r\n`;\r\n\r\nconst Outline = styled.div`\r\n\tposition: absolute;\r\n\tleft: 50%;\r\n\ttop: 50%;\r\n\theight: 80%;\r\n\twidth: 80%;\r\n\tborder: solid white 0.8rem;\r\n\tborder-width: ${(props) =>\r\n\t\t(props.gridRows === 3 && '1.5rem') ||\r\n\t\t(props.gridRows === 5 && '1.1rem') ||\r\n\t\t(props.gridRows === 7 && '0.8rem')};\r\n\tborder-radius: 80%;\r\n\ttransform: translate(-50%, -50%);\r\n\tbox-shadow: 0 12px 17px 2px rgba(255, 255, 255, 0.14),\r\n\t\t0 5px 22px 4px rgba(255, 255, 255, 0.12),\r\n\t\t0 7px 8px -4px rgba(255, 255, 255, 0.2);\r\n`;\r\n\r\nconst O = ({ className, gridRows }) => {\r\n\treturn (\r\n\t\t<StyledO className={className}>\r\n\t\t\t<Outline gridRows={gridRows} />\r\n\t\t</StyledO>\r\n\t);\r\n};\r\n\r\nexport default O;\r\n","import { useCallback, useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport X from './X';\r\nimport O from './O';\r\n\r\nconst StyledGridCell = styled.div`\r\n\tposition: relative;\r\n\tbackground-color: #000000cc;\r\n\tborder-radius: ${(props) =>\r\n\t\t(props.gridRows === 3 && '1rem') ||\r\n\t\t(props.gridRows === 5 && '0.8rem') ||\r\n\t\t(props.gridRows === 7 && '0.6rem')};\r\n\r\n\tbox-shadow: inset 0 4px 5px 0 rgba(0, 0, 0, 0.14),\r\n\t\tinset 0 1px 10px 0 rgba(0, 0, 0, 0.12),\r\n\t\tinset 0 2px 4px -1px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst HoverArea = styled.div`\r\n\tposition: absolute;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\tbackground-color: transparent;\r\n\twidth: 75%;\r\n\theight: 75%;\r\n\ttransform: translate(-50%, -50%);\r\n\tz-index: 1;\r\n\tcursor: pointer;\r\n`;\r\n\r\nconst HoverX = styled(X)`\r\n\topacity: 0.75;\r\n\r\n\tdiv {\r\n\t\tbox-shadow: unset;\r\n\t}\r\n`;\r\n\r\nconst HoverO = styled(O)`\r\n\topacity: 0.75;\r\n\r\n\tdiv {\r\n\t\tbox-shadow: unset;\r\n\t}\r\n`;\r\n\r\nconst GridCell = ({\r\n\trow,\r\n\tcolumn,\r\n\tturnCounter,\r\n\toccupied,\r\n\toutput,\r\n\tgameComplete,\r\n\tsetSelected,\r\n\tgridRows,\r\n}) => {\r\n\tconst [isHovered, setIsHovered] = useState(false);\r\n\tconst [XorO, setXorO] = useState('X');\r\n\r\n\tconst cellSelected = useCallback(\r\n\t\t(event) => {\r\n\t\t\tif (\r\n\t\t\t\tevent.type === 'click' ||\r\n\t\t\t\tevent.code === 'Enter' ||\r\n\t\t\t\tevent.code === 'Space'\r\n\t\t\t) {\r\n\t\t\t\tif (occupied === false && gameComplete === false) {\r\n\t\t\t\t\tsetSelected(row, column, XorO);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t[XorO, column, gameComplete, occupied, row, setSelected]\r\n\t);\r\n\r\n\tconst hoverCell = useCallback((event) => {\r\n\t\tif (event.type === 'mouseenter') {\r\n\t\t\tsetIsHovered(true);\r\n\t\t} else if (event.type === 'mouseleave') {\r\n\t\t\tsetIsHovered(false);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetXorO(turnCounter % 2 ? 'X' : 'O');\r\n\t}, [turnCounter]);\r\n\r\n\treturn (\r\n\t\t<StyledGridCell gridRows={gridRows}>\r\n\t\t\t<HoverArea\r\n\t\t\t\tonClick={cellSelected}\r\n\t\t\t\tonKeyPress={cellSelected}\r\n\t\t\t\tonMouseEnter={hoverCell}\r\n\t\t\t\tonMouseLeave={hoverCell}\r\n\t\t\t\ttabIndex='0'\r\n\t\t\t/>\r\n\t\t\t{(output === 'X' && <X gridRows={gridRows} />) ||\r\n\t\t\t\t(output === 'O' && <O gridRows={gridRows} />) ||\r\n\t\t\t\t(isHovered && XorO === 'X' && gameComplete === false && (\r\n\t\t\t\t\t<HoverX gridRows={gridRows} />\r\n\t\t\t\t)) ||\r\n\t\t\t\t(isHovered && XorO === 'O' && gameComplete === false && (\r\n\t\t\t\t\t<HoverO gridRows={gridRows} />\r\n\t\t\t\t))}\r\n\t\t</StyledGridCell>\r\n\t);\r\n};\r\n\r\nexport default GridCell;\r\n","import styled, { keyframes } from 'styled-components';\r\nimport GridCell from './GridCell';\r\n\r\nconst StyledGrid = styled.div`\r\n\tgrid-area: grid;\r\n\r\n\tmin-width: 300px;\r\n\tmin-height: 300px;\r\n\tmax-width: 70vh;\r\n\tmax-height: 70vh;\r\n\r\n\tbackground-color: #ffffff80;\r\n\tpadding: 1.25rem;\r\n\tborder-radius: 1rem;\r\n\tbox-shadow: 0 12px 17px 2px rgba(0, 0, 0, 0.14),\r\n\t\t0 5px 22px 4px rgba(0, 0, 0, 0.12), 0 7px 8px -4px rgba(0, 0, 0, 0.2),\r\n\t\tinset 0 4px 5px 0 rgba(255, 255, 255, 0.14),\r\n\t\tinset 0 1px 10px 0 rgba(255, 255, 255, 0.12),\r\n\t\tinset 0 2px 4px -1px rgba(255, 255, 255, 0.2);\r\n\r\n\tdisplay: grid;\r\n\tgrid-template-rows: ${(props) => `repeat(${props.gridRows}, 1fr)`};\r\n\tgrid-template-columns: ${(props) => `repeat(${props.gridColumns}, 1fr)`};\r\n\r\n\tgrid-gap: ${(props) =>\r\n\t\t(props.gridRows === 3 && '1.2rem') ||\r\n\t\t(props.gridRows === 5 && '1rem') ||\r\n\t\t(props.gridRows === 7 && '0.8rem')};\r\n\r\n\talign-self: start;\r\n\r\n\t@media (min-width: 300px) {\r\n\t\twidth: 90vw;\r\n\t\theight: 90vw;\r\n\t}\r\n\r\n\t@media (min-width: 800px) and (min-height: 800px) {\r\n\t\tpadding: 2rem;\r\n\t\twidth: 80vw;\r\n\t\theight: 80vw;\r\n\t}\r\n`;\r\n\r\nconst createGridCells = (\r\n\tgridRows,\r\n\tgridColumns,\r\n\tboardState,\r\n\tturnCounter,\r\n\tgameComplete,\r\n\tsetSelected\r\n) => {\r\n\tlet gridCells = [];\r\n\r\n\tfor (let row = 0; row < gridRows; row++) {\r\n\t\tfor (let column = 0; column < gridColumns; column++) {\r\n\t\t\tconst occupied = boardState[row][column] === '' ? false : true;\r\n\t\t\tconst output = occupied && boardState[row][column];\r\n\r\n\t\t\tgridCells.push(\r\n\t\t\t\t<GridCell\r\n\t\t\t\t\tkey={[row, column]}\r\n\t\t\t\t\trow={row}\r\n\t\t\t\t\tcolumn={column}\r\n\t\t\t\t\tturnCounter={turnCounter}\r\n\t\t\t\t\toccupied={occupied}\r\n\t\t\t\t\toutput={output}\r\n\t\t\t\t\tgameComplete={gameComplete}\r\n\t\t\t\t\tsetSelected={setSelected}\r\n\t\t\t\t\tgridRows={gridRows}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\treturn gridCells;\r\n};\r\n\r\nconst Grid = ({\r\n\tgridRows,\r\n\tgridColumns,\r\n\tboardState,\r\n\tturnCounter,\r\n\tgameComplete,\r\n\tupdateBoardState,\r\n}) => {\r\n\tconst setSelected = (row, column, XorO) =>\r\n\t\tupdateBoardState(row, column, XorO);\r\n\r\n\treturn (\r\n\t\t<StyledGrid gridRows={gridRows} gridColumns={gridColumns}>\r\n\t\t\t{createGridCells(\r\n\t\t\t\tgridRows,\r\n\t\t\t\tgridColumns,\r\n\t\t\t\tboardState,\r\n\t\t\t\tturnCounter,\r\n\t\t\t\tgameComplete,\r\n\t\t\t\tsetSelected\r\n\t\t\t)}\r\n\t\t</StyledGrid>\r\n\t);\r\n};\r\n\r\nexport default Grid;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledFooter = styled.footer`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tposition: sticky;\r\n\ttop: 100vh;\r\n\r\n\tp {\r\n\t\tbackground-color: #000000cc;\r\n\t\tcolor: white;\r\n\t\tpadding: 0.25rem 1rem;\r\n\t\tborder-radius: 0.5rem 0.5rem 0 0;\r\n\t\tfont-size: 1.5rem;\r\n\r\n\t\ta {\r\n\t\t\ttext-decoration: none;\r\n\t\t\tcolor: inherit;\r\n\r\n\t\t\t&:hover {\r\n\t\t\t\ttext-decoration: underline;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<StyledFooter>\r\n\t\t\t<p>\r\n\t\t\t\t© <a href='https://github.com/TrevorLeeman'>Trevor Leeman</a> | 2021\r\n\t\t\t</p>\r\n\t\t</StyledFooter>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledGridCell = styled.div`\r\n\tbackground-color: #000000cc;\r\n\tbox-shadow: inset 0 4px 5px 0 rgba(0, 0, 0, 0.14),\r\n\t\tinset 0 1px 10px 0 rgba(0, 0, 0, 0.12),\r\n\t\tinset 0 2px 4px -1px rgba(0, 0, 0, 0.2);\r\n\r\n\tborder-radius: ${(props) =>\r\n\t\t(props.rows === 3 && '0.6rem') ||\r\n\t\t(props.rows === 5 && '0.5rem') ||\r\n\t\t(props.rows === 7 && '0.4rem')};\r\n`;\r\n\r\nconst GridCell = ({ rows }) => {\r\n\treturn <StyledGridCell rows={rows} />;\r\n};\r\n\r\nexport default GridCell;\r\n","import styled from 'styled-components';\r\nimport GridCell from './MiniGridCell';\r\n\r\nconst StyledGrid = styled.div`\r\n\twidth: 200px;\r\n\theight: 200px;\r\n\tbackground-color: #7051b8e6;\r\n\tpadding: 1.25rem;\r\n\tborder-radius: 1rem;\r\n\tbox-shadow: inset 0 4px 5px 0 rgba(255, 255, 255, 0.14),\r\n\t\tinset 0 1px 10px 0 rgba(255, 255, 255, 0.12),\r\n\t\tinset 0 2px 4px -1px rgba(255, 255, 255, 0.2);\r\n\r\n\tdisplay: grid;\r\n\tgrid-template-rows: ${(props) => `repeat(${props.rows}, 1fr)`};\r\n\tgrid-template-columns: ${(props) => `repeat(${props.columns}, 1fr)`};\r\n\tgrid-gap: ${(props) =>\r\n\t\t(props.rows === 3 && '0.8rem') ||\r\n\t\t(props.rows === 5 && '0.6rem') ||\r\n\t\t(props.rows === 7 && '0.5rem')};\r\n\r\n\tscroll-snap-align: center;\r\n\r\n\t@media (min-width: 400px) {\r\n\t\twidth: 300px;\r\n\t\theight: 300px;\r\n\t}\r\n\r\n\t@media (min-width: 600px) {\r\n\t\tpadding: 0.8rem;\r\n\t}\r\n`;\r\n\r\nconst createGridCells = (rows, columns) => {\r\n\tlet gridCells = [];\r\n\r\n\tfor (let row = 0; row < rows; row++) {\r\n\t\tfor (let column = 0; column < columns; column++) {\r\n\t\t\tgridCells.push(<GridCell key={[row, column]} rows={rows} />);\r\n\t\t}\r\n\t}\r\n\r\n\treturn gridCells;\r\n};\r\n\r\nconst MiniGrid = ({ rows, columns }) => {\r\n\treturn (\r\n\t\t<StyledGrid className='styledGrid' rows={rows} columns={columns}>\r\n\t\t\t{createGridCells(rows, columns)}\r\n\t\t</StyledGrid>\r\n\t);\r\n};\r\n\r\nexport default MiniGrid;\r\n","import styled from 'styled-components';\r\nimport MiniGrid from './MiniGrid/MiniGrid';\r\n\r\nconst GameSettingsWrapper = styled.form`\r\n\tdisplay: grid;\r\n\tgrid-template-columns: 1fr 1fr 1fr;\r\n\tpadding: 1rem 1rem 2rem;\r\n\tgap: 2rem;\r\n\toverflow: auto;\r\n\twidth: 100%;\r\n\tscroll-snap-type: x mandatory;\r\n\tuser-select: none;\r\n\r\n\t@media (min-width: 400px) {\r\n\t\tpadding: 2rem 2rem 3rem;\r\n\t}\r\n\r\n\t@media (min-width: 800px) and (max-width: 1440px) {\r\n\t\tgrid-template-columns: 1fr;\r\n\t}\r\n`;\r\n\r\nconst ModeWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tcursor: pointer;\r\n\ttransition: 0.1s ease-out;\r\n\r\n\t@media (min-width: 400px) {\r\n\t\t&:hover {\r\n\t\t\ttransform: scale(1.1);\r\n\t\t\ttransition: 0.1s ease-in;\r\n\r\n\t\t\t.styledGrid {\r\n\t\t\t\tbox-shadow: 0 12px 17px 2px rgba(0, 0, 0, 0.14),\r\n\t\t\t\t\t0 5px 22px 4px rgba(0, 0, 0, 0.12), 0 7px 8px -4px rgba(0, 0, 0, 0.2),\r\n\t\t\t\t\tinset 0 4px 5px 0 rgba(255, 255, 255, 0.14),\r\n\t\t\t\t\tinset 0 1px 10px 0 rgba(255, 255, 255, 0.12),\r\n\t\t\t\t\tinset 0 2px 4px -1px rgba(255, 255, 255, 0.2);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst GameSettings = ({\r\n\tsetBoardSize,\r\n\tsetNumToWin,\r\n\tcloseModal,\r\n\tglobalRows,\r\n}) => {\r\n\tconst updateGridSize = (numRows, numColumns, numToWin) => {\r\n\t\tsetBoardSize(numRows, numColumns);\r\n\t\tsetNumToWin(numToWin);\r\n\t\tcloseModal();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<GameSettingsWrapper>\r\n\t\t\t<ModeWrapper onClick={() => updateGridSize(3, 3, 3)}>\r\n\t\t\t\t<h3>3x3</h3>\r\n\t\t\t\t<p>Win: 3 in a row</p>\r\n\t\t\t\t<MiniGrid rows={3} columns={3} globalRows={globalRows} />\r\n\t\t\t</ModeWrapper>\r\n\t\t\t<ModeWrapper onClick={() => updateGridSize(5, 5, 4)}>\r\n\t\t\t\t<h3>5x5</h3>\r\n\t\t\t\t<p>Win: 4 in a row</p>\r\n\t\t\t\t<MiniGrid rows={5} columns={5} globalRows={globalRows} />\r\n\t\t\t</ModeWrapper>\r\n\t\t\t<ModeWrapper onClick={() => updateGridSize(7, 7, 5)}>\r\n\t\t\t\t<h3>7x7</h3>\r\n\t\t\t\t<p>Win: 5 in a row</p>\r\n\r\n\t\t\t\t<MiniGrid rows={7} columns={7} globalRows={globalRows} />\r\n\t\t\t</ModeWrapper>\r\n\t\t</GameSettingsWrapper>\r\n\t);\r\n};\r\n\r\nexport default GameSettings;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledSVG = styled.svg`\r\n\ttransition: 200ms ease-out;\r\n\twidth: 3rem;\r\n\theight: 3rem;\r\n\tcursor: pointer;\r\n\r\n\tpath {\r\n\t\tstroke: grey;\r\n\t\tstroke-width: 2;\r\n\t}\r\n\r\n\t&:hover {\r\n\t\tpath {\r\n\t\t\tstroke: #7051b8;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst CloseIcon = ({ clickHandler }) => {\r\n\treturn (\r\n\t\t<StyledSVG\r\n\t\t\tonClick={clickHandler}\r\n\t\t\twidth='24'\r\n\t\t\theight='24'\r\n\t\t\tfill='none'\r\n\t\t\tviewBox='0 0 24 24'\r\n\t\t>\r\n\t\t\t<path\r\n\t\t\t\tstrokeLinecap='round'\r\n\t\t\t\tstrokeLinejoin='round'\r\n\t\t\t\td='M17.25 6.75L6.75 17.25'\r\n\t\t\t/>\r\n\t\t\t<path\r\n\t\t\t\tstrokeLinecap='round'\r\n\t\t\t\tstrokeLinejoin='round'\r\n\t\t\t\td='M6.75 6.75L17.25 17.25'\r\n\t\t\t/>\r\n\t\t</StyledSVG>\r\n\t);\r\n};\r\n\r\nexport default CloseIcon;\r\n","import styled from 'styled-components';\r\nimport GameSettings from './GameSettings';\r\nimport CloseIcon from '../Icons/CloseIcon';\r\n\r\nconst ModalBackground = styled.div`\r\n\tz-index: 998;\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-color: rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nconst PositionModal = styled.div`\r\n\tz-index: 999;\r\n\tposition: absolute;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\ttransform: translate(-50%, -50%);\r\n`;\r\n\r\nconst StyledModal = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tpadding: 1rem;\r\n\tborder-radius: 1rem;\r\n\tmax-width: 90vw;\r\n\tbackground-color: #f7f7f7;\r\n\toverflow: auto;\r\n\tfont-size: 2rem;\r\n\tmax-height: 70vh;\r\n\r\n\tbox-shadow: 0 12px 17px 2px rgba(0, 0, 0, 0.14),\r\n\t\t0 5px 22px 4px rgba(0, 0, 0, 0.12), 0 7px 8px -4px rgba(0, 0, 0, 0.2),\r\n\t\tinset 0 4px 5px 0 rgba(255, 255, 255, 0.14),\r\n\t\tinset 0 1px 10px 0 rgba(255, 255, 255, 0.12),\r\n\t\tinset 0 2px 4px -1px rgba(255, 255, 255, 0.2);\r\n\r\n\t@media (min-width: 1440px) {\r\n\t\tpadding: 2rem;\r\n\t}\r\n`;\r\n\r\nconst TitleCloseWrap = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\tpadding-left: 1rem;\r\n\r\n\t@media (min-width: 400px) {\r\n\t\tpadding-left: 2rem;\r\n\t}\r\n`;\r\n\r\nconst Modal = ({ closeSettings, setBoardSize, setConsecutiveToWin }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<PositionModal>\r\n\t\t\t\t<StyledModal>\r\n\t\t\t\t\t<TitleCloseWrap>\r\n\t\t\t\t\t\t<h2>Select Mode</h2>\r\n\t\t\t\t\t\t<CloseIcon clickHandler={closeSettings} />\r\n\t\t\t\t\t</TitleCloseWrap>\r\n\t\t\t\t\t<GameSettings\r\n\t\t\t\t\t\tsetBoardSize={setBoardSize}\r\n\t\t\t\t\t\tsetNumToWin={setConsecutiveToWin}\r\n\t\t\t\t\t\tcloseModal={closeSettings}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</StyledModal>\r\n\t\t\t</PositionModal>\r\n\t\t\t<ModalBackground onClick={closeSettings} />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Modal;\r\n","export const createInitialBoardState = (rows, columns) => {\r\n\t// Initialize 2d boardState array\r\n\tlet initialBoardState = [];\r\n\r\n\tfor (let row = 0; row < rows; row++) {\r\n\t\tinitialBoardState[row] = [];\r\n\t\tfor (let column = 0; column < columns; column++) {\r\n\t\t\tinitialBoardState[row][column] = '';\r\n\t\t}\r\n\t}\r\n\r\n\treturn initialBoardState;\r\n};\r\n\r\nexport const createDiagonalBoardState = (rows, columns) => {\r\n\t// Initialize 2d boardState array\r\n\tlet diagonals = [];\r\n\r\n\tfor (let i = 0; i < rows + columns - 1; i++) {\r\n\t\tdiagonals.push([]);\r\n\t}\r\n\r\n\treturn diagonals;\r\n};\r\n\r\nexport const checkBoardState = (currentBoardState, lengthReqForWin) => {\r\n\tlet gameIsWon = false;\r\n\tlet winner = null;\r\n\r\n\t// Loop through our 2d board state array\r\n\tfor (let currentRow of currentBoardState) {\r\n\t\tlet inARow = 0;\r\n\t\tlet XorO = '';\r\n\t\tfor (let tileValue of currentRow) {\r\n\t\t\tif (tileValue === XorO && tileValue !== '') {\r\n\t\t\t\t// If current tile is same as previous\r\n\t\t\t\tinARow++;\r\n\r\n\t\t\t\tif (inARow === lengthReqForWin) {\r\n\t\t\t\t\t// If we've reached a winning state\r\n\t\t\t\t\tgameIsWon = true;\r\n\t\t\t\t\twinner = XorO;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Reset our tracking array with new starting value\r\n\t\t\t\tinARow = 1;\r\n\t\t\t\tXorO = tileValue;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn [gameIsWon, winner];\r\n};\r\n\r\nexport const checkColumns = (\r\n\tcurrentBoardState,\r\n\trowLen,\r\n\tcolumnLen,\r\n\tlengthReqForWin\r\n) => {\r\n\tlet columnBasedBoardState = createInitialBoardState(rowLen, columnLen);\r\n\r\n\t// Convert 2d row array to 2d column array\r\n\tfor (let [i, currentRow] of currentBoardState.entries()) {\r\n\t\tfor (let [j, XorO] of currentRow.entries()) {\r\n\t\t\tcolumnBasedBoardState[j][i] = XorO;\r\n\t\t}\r\n\t}\r\n\r\n\tconst columnWin = checkBoardState(columnBasedBoardState, lengthReqForWin);\r\n\r\n\treturn columnWin;\r\n};\r\n\r\nexport const checkDiagonals = (\r\n\tcurrentBoardState,\r\n\trowLen,\r\n\tcolumnLen,\r\n\tlengthReqForWin\r\n) => {\r\n\tlet downLeftDiagonalBoardState = createDiagonalBoardState(rowLen, columnLen);\r\n\tlet downRightDiagonalBoardState = createDiagonalBoardState(rowLen, columnLen);\r\n\r\n\t// Convert 2d row array to 2d diagonal arrays\r\n\tfor (let [i, currentRow] of currentBoardState.entries()) {\r\n\t\tfor (let [j, XorO] of currentRow.entries()) {\r\n\t\t\tdownLeftDiagonalBoardState[i + j].push(XorO);\r\n\t\t\tdownRightDiagonalBoardState[i - j + rowLen - 1].push(XorO);\r\n\t\t}\r\n\t}\r\n\r\n\tconst bothDiagonals = [\r\n\t\t...downLeftDiagonalBoardState,\r\n\t\t...downRightDiagonalBoardState,\r\n\t].filter((diagonalArr) => diagonalArr.length >= lengthReqForWin);\r\n\r\n\tconst diagonalWin = checkBoardState(bothDiagonals, lengthReqForWin);\r\n\r\n\treturn diagonalWin;\r\n};\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\nimport Header from './UI/Header';\r\nimport Menu from './UI/Menu/Menu';\r\nimport Grid from './Grid/Grid';\r\nimport Footer from './UI/Footer';\r\nimport Modal from './UI/Modal/Modal';\r\nimport {\r\n\tcreateInitialBoardState,\r\n\tcheckBoardState,\r\n\tcheckColumns,\r\n\tcheckDiagonals,\r\n} from './Game/GameLogic';\r\n\r\nconst CssReset = createGlobalStyle`\r\n  *{\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  html{\r\n\tfont-family: 'Saira Condensed', sans-serif;\r\n\r\n\tfont-size: 0.6em;\r\n\r\n\t@media (min-width: 420px) {\r\n\t\tfont-size: 0.8em;\r\n\t}\r\n\r\n\t@media (min-width: 600px) {\r\n\t\tfont-size: 1em;\r\n\t}\r\n  }\r\n`;\r\n\r\nconst AppContainer = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tmin-width: 300px;\r\n\toverflow: auto;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\r\n\tbackground-image: linear-gradient(\r\n\t\t\t201deg,\r\n\t\t\trgba(148, 148, 148, 0.07) 0%,\r\n\t\t\trgba(148, 148, 148, 0.07) 50%,\r\n\t\t\trgba(83, 83, 83, 0.07) 50%,\r\n\t\t\trgba(83, 83, 83, 0.07) 100%\r\n\t\t),\r\n\t\tlinear-gradient(\r\n\t\t\t192deg,\r\n\t\t\trgba(176, 176, 176, 0.08) 0%,\r\n\t\t\trgba(176, 176, 176, 0.08) 50%,\r\n\t\t\trgba(180, 180, 180, 0.08) 50%,\r\n\t\t\trgba(180, 180, 180, 0.08) 100%\r\n\t\t),\r\n\t\tlinear-gradient(\r\n\t\t\t48deg,\r\n\t\t\trgba(185, 185, 185, 0.1) 0%,\r\n\t\t\trgba(185, 185, 185, 0.1) 50%,\r\n\t\t\trgba(243, 243, 243, 0.1) 50%,\r\n\t\t\trgba(243, 243, 243, 0.1) 100%\r\n\t\t),\r\n\t\tlinear-gradient(\r\n\t\t\t65deg,\r\n\t\t\trgba(172, 172, 172, 0.09) 0%,\r\n\t\t\trgba(172, 172, 172, 0.09) 50%,\r\n\t\t\trgba(209, 209, 209, 0.09) 50%,\r\n\t\t\trgba(209, 209, 209, 0.09) 100%\r\n\t\t),\r\n\t\tlinear-gradient(\r\n\t\t\t4deg,\r\n\t\t\trgba(224, 224, 224, 0.03) 0%,\r\n\t\t\trgba(224, 224, 224, 0.03) 50%,\r\n\t\t\trgba(49, 49, 49, 0.03) 50%,\r\n\t\t\trgba(49, 49, 49, 0.03) 100%\r\n\t\t),\r\n\t\tlinear-gradient(\r\n\t\t\t228deg,\r\n\t\t\trgba(152, 152, 152, 0.03) 0%,\r\n\t\t\trgba(152, 152, 152, 0.03) 50%,\r\n\t\t\trgba(130, 130, 130, 0.03) 50%,\r\n\t\t\trgba(130, 130, 130, 0.03) 100%\r\n\t\t),\r\n\t\tlinear-gradient(\r\n\t\t\t163deg,\r\n\t\t\trgba(170, 170, 170, 0.08) 0%,\r\n\t\t\trgba(170, 170, 170, 0.08) 50%,\r\n\t\t\trgba(232, 232, 232, 0.08) 50%,\r\n\t\t\trgba(232, 232, 232, 0.08) 100%\r\n\t\t),\r\n\t\tlinear-gradient(\r\n\t\t\t152deg,\r\n\t\t\trgba(12, 12, 12, 0.05) 0%,\r\n\t\t\trgba(12, 12, 12, 0.05) 50%,\r\n\t\t\trgba(161, 161, 161, 0.05) 50%,\r\n\t\t\trgba(161, 161, 161, 0.05) 100%\r\n\t\t),\r\n\t\tlinear-gradient(\r\n\t\t\t302deg,\r\n\t\t\trgba(48, 48, 48, 0.1) 0%,\r\n\t\t\trgba(48, 48, 48, 0.1) 50%,\r\n\t\t\trgba(195, 195, 195, 0.1) 50%,\r\n\t\t\trgba(195, 195, 195, 0.1) 100%\r\n\t\t),\r\n\t\tlinear-gradient(90deg, rgb(144, 14, 253), rgb(74, 115, 255));\r\n`;\r\n\r\nconst StyledApp = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-rows: fit-content 1fr;\r\n\tgrid-template-columns: 1fr;\r\n\tgrid-template-areas:\r\n\t\t'controls'\r\n\t\t'grid';\r\n\tgap: 2rem;\r\n\tplace-items: center;\r\n\tpadding: 2rem 0;\r\n\r\n\t@media (min-width: 400px) {\r\n\t\tpadding: 2rem;\r\n\t}\r\n\r\n\t@media (min-width: 1440px) {\r\n\t\tgrid-template-rows: 1fr;\r\n\t\tgrid-template-columns: 1fr 1fr 1fr;\r\n\t\tgrid-template-areas: 'controls grid .';\r\n\t}\r\n`;\r\n\r\nconst App = () => {\r\n\tconst [rows, setRows] = useState(3);\r\n\tconst [columns, setColumns] = useState(3);\r\n\tconst [lengthReqForWin, setLengthReqForWin] = useState(3);\r\n\tconst [boardState, setBoardState] = useState(\r\n\t\tcreateInitialBoardState(rows, columns)\r\n\t);\r\n\tconst [firstTurn, setFirstTurn] = useState(1);\r\n\tconst [turnCounter, setTurnCounter] = useState(firstTurn);\r\n\tconst [gameComplete, setGameComplete] = useState(false);\r\n\tconst [modalActive, setModalActive] = useState(false);\r\n\tconst [player1Win, setPlayer1Win] = useState(false);\r\n\tconst [player2Win, setPlayer2Win] = useState(false);\r\n\tconst [player1WinCount, setPlayer1WinCount] = useState(0);\r\n\tconst [player2WinCount, setPlayer2WinCount] = useState(0);\r\n\r\n\tconst resetBoardState = useCallback(\r\n\t\t(\r\n\t\t\tevent,\r\n\t\t\tnumRows = rows,\r\n\t\t\tnumColumns = columns,\r\n\t\t\tincrementFirstTurn = gameComplete ? true : false\r\n\t\t) => {\r\n\t\t\tsetBoardState(createInitialBoardState(numRows, numColumns));\r\n\t\t\tsetGameComplete(false);\r\n\t\t\tsetTurnCounter(firstTurn + 1);\r\n\t\t\tsetFirstTurn((currentValue) => currentValue + 1);\r\n\t\t\tsetPlayer1Win(false);\r\n\t\t\tsetPlayer2Win(false);\r\n\t\t},\r\n\t\t[columns, firstTurn, gameComplete, rows]\r\n\t);\r\n\r\n\tconst updateBoardState = useCallback((row, column, XorO) => {\r\n\t\tsetBoardState((currentBoardState) => {\r\n\t\t\tlet newBoardState = [...currentBoardState];\r\n\t\t\tnewBoardState[row][column] = XorO;\r\n\t\t\treturn newBoardState;\r\n\t\t});\r\n\r\n\t\tsetTurnCounter((currentTurnCount) => currentTurnCount + 1);\r\n\t}, []);\r\n\r\n\tconst toggleModal = useCallback(() => {\r\n\t\treturn modalActive ? setModalActive(false) : setModalActive(true);\r\n\t}, [modalActive]);\r\n\r\n\tconst updateBoardSize = useCallback(\r\n\t\t(numRows, numColumns) => {\r\n\t\t\tsetRows(numRows);\r\n\t\t\tsetColumns(numColumns);\r\n\t\t\tresetBoardState(null, numRows, numColumns);\r\n\t\t},\r\n\t\t[resetBoardState]\r\n\t);\r\n\r\n\t// Check for winner when board state changes\r\n\tuseEffect(() => {\r\n\t\tconst [rowWin, rowWinner] = checkBoardState(boardState, lengthReqForWin);\r\n\t\tconst [columnWin, columnWinner] = checkColumns(\r\n\t\t\tboardState,\r\n\t\t\tcolumns,\r\n\t\t\trows,\r\n\t\t\tlengthReqForWin\r\n\t\t);\r\n\t\tconst [diagonalWin, diagonalWinner] = checkDiagonals(\r\n\t\t\tboardState,\r\n\t\t\tcolumns,\r\n\t\t\trows,\r\n\t\t\tlengthReqForWin\r\n\t\t);\r\n\r\n\t\tif (\r\n\t\t\trowWin ||\r\n\t\t\tcolumnWin ||\r\n\t\t\tdiagonalWin ||\r\n\t\t\tturnCounter - firstTurn === rows * columns\r\n\t\t) {\r\n\t\t\tsetGameComplete(true);\r\n\t\t\tsetTurnCounter((currentTurnCount) => currentTurnCount + 1);\r\n\t\t\tif (rowWinner === 'X' || columnWinner === 'X' || diagonalWinner === 'X') {\r\n\t\t\t\tsetPlayer1Win(true);\r\n\t\t\t\tsetPlayer1WinCount((currentWinCount) => currentWinCount + 1);\r\n\t\t\t} else if (\r\n\t\t\t\trowWinner === 'O' ||\r\n\t\t\t\tcolumnWinner === 'O' ||\r\n\t\t\t\tdiagonalWinner === 'O'\r\n\t\t\t) {\r\n\t\t\t\tsetPlayer2Win(true);\r\n\t\t\t\tsetPlayer2WinCount((currentWinCount) => currentWinCount + 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [boardState]);\r\n\r\n\tconsole.log(boardState);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<CssReset />\r\n\t\t\t<AppContainer>\r\n\t\t\t\t<Header title='React-Tac-Toe' />\r\n\t\t\t\t<StyledApp>\r\n\t\t\t\t\t<Menu\r\n\t\t\t\t\t\tgameComplete={gameComplete}\r\n\t\t\t\t\t\tresetBoardState={resetBoardState}\r\n\t\t\t\t\t\tshowSettings={toggleModal}\r\n\t\t\t\t\t\tplayer1Wins={player1WinCount}\r\n\t\t\t\t\t\tplayer2Wins={player2WinCount}\r\n\t\t\t\t\t\tturnCounter={turnCounter}\r\n\t\t\t\t\t\tplayer1Win={player1Win}\r\n\t\t\t\t\t\tplayer2Win={player2Win}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tgridRows={rows}\r\n\t\t\t\t\t\tgridColumns={columns}\r\n\t\t\t\t\t\tboardState={boardState}\r\n\t\t\t\t\t\tturnCounter={turnCounter}\r\n\t\t\t\t\t\tgameComplete={gameComplete}\r\n\t\t\t\t\t\tupdateBoardState={updateBoardState}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</StyledApp>\r\n\t\t\t\t<Footer />\r\n\t\t\t\t{modalActive && (\r\n\t\t\t\t\t<Modal\r\n\t\t\t\t\t\tcloseSettings={toggleModal}\r\n\t\t\t\t\t\tsetBoardSize={updateBoardSize}\r\n\t\t\t\t\t\tsetConsecutiveToWin={setLengthReqForWin}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</AppContainer>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}