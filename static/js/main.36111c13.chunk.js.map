{"version":3,"sources":["serviceWorkerRegistration.js","UI/Menu/Player.js","UI/Menu/PlayerInfo.js","UI/Button.js","UI/Icons/GearIcon.js","UI/Menu/Menu.js","Grid/X.js","Grid/O.js","Grid/GridCell.js","Grid/Grid.js","UI/Footer.js","UI/Modal/MiniGrid/MiniGridCell.js","UI/Modal/MiniGrid/MiniGrid.js","UI/Modal/GameSettings.js","UI/Icons/CloseIcon.js","UI/Modal/Modal.js","Game/GameLogic.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","StyledPlayer","styled","div","props","turnActive","win","StyledPlayerName","h2","Score","checkInputLength","event","target","innerText","length","key","preventDefault","Player","name","score","useState","playerName","setPlayerName","onKeyPress","onBlur","contentEditable","suppressContentEditableWarning","PlayerInfoWrapper","PlayerInfo","player1Wins","player2Wins","turnCounter","player1Win","player2Win","StyledButton","button","Button","children","className","clickHandler","onClick","StyledSVG","svg","GearIcon","xmlns","focusable","role","viewBox","d","PlayerInfoControlsWrapper","aside","Controls","StyledResetButton","StyledSettingsButton","Menu","gameComplete","resetBoardState","showSettings","StyledX","XBar","gridRows","XBar1","XBar2","X","StyledO","Outline","O","StyledGridCell","HoverArea","HoverX","HoverO","GridCell","row","column","occupied","output","setSelected","isHovered","setIsHovered","XorO","setXorO","cellSelected","useCallback","type","code","hoverCell","useEffect","onMouseEnter","onMouseLeave","tabIndex","StyledGrid","gridColumns","createGridCells","boardState","gridCells","push","Grid","updateBoardState","StyledFooter","footer","Footer","href","title","rel","rows","columns","MiniGrid","GameSettingsWrapper","form","ModeWrapper","GameSettings","setBoardSize","setNumToWin","closeModal","globalRows","updateGridSize","numRows","numColumns","numToWin","CloseIcon","width","height","fill","strokeLinecap","strokeLinejoin","ModalBackground","PositionModal","StyledModal","TitleCloseWrap","Modal","closeSettings","setConsecutiveToWin","createInitialBoardState","initialBoardState","createDiagonalBoardState","diagonals","i","checkBoardState","currentBoardState","lengthReqForWin","gameIsWon","winner","currentRow","inARow","tileValue","CssReset","createGlobalStyle","AppContainer","StyledApp","App","setRows","setColumns","setLengthReqForWin","setBoardState","firstTurn","setFirstTurn","setTurnCounter","setGameComplete","modalActive","setModalActive","setPlayer1Win","setPlayer2Win","player1WinCount","setPlayer1WinCount","player2WinCount","setPlayer2WinCount","currentValue","newBoardState","currentTurnCount","toggleModal","updateBoardSize","rowWin","rowWinner","rowLen","columnLen","columnBasedBoardState","entries","j","checkColumns","columnWin","columnWinner","downLeftDiagonalBoardState","downRightDiagonalBoardState","bothDiagonals","filter","diagonalArr","checkDiagonals","diagonalWin","diagonalWinner","currentWinCount","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"6JAYMA,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DAsCnC,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,+GAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAACC,GACNL,QAAQK,MAAM,4CAA6CA,M,2GC5F3DC,EAAeC,IAAOC,IAAV,kTAYf,SAACC,GAAD,OAAWA,EAAMC,YAAN,2BACX,SAACD,GAAD,OAAWA,EAAME,KAAO,4BAGrBC,EAAmBL,IAAOM,GAAV,0BAEhBC,EAAQP,IAAOC,IAAV,gDAILO,EAAmB,SAACC,GACzB,OAAIA,EAAMC,OAAOC,UAAUC,QAAU,IAAoB,UAAdH,EAAMI,MAGhDJ,EAAMK,kBACC,IA0BMC,EAtBA,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,MAAOd,EAAsB,EAAtBA,WAAYC,EAAU,EAAVA,IAC1C,EAAoCc,mBAASF,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAMA,OACC,eAACrB,EAAD,CAAcI,WAAYA,EAAYC,IAAKA,EAA3C,UACC,cAACC,EAAD,CACCgB,WAAYb,EACZc,OARsB,SAACb,GACzBW,EAAcX,EAAMC,OAAOC,YAQzBY,gBAAgB,OAChBC,gCAAgC,EAJjC,SAMEL,IAEF,cAACZ,EAAD,UAAQU,QChDLQ,EAAoBzB,IAAOC,IAAV,iLAkCRyB,GAzBI,SAAC,GAMb,IALNC,EAKK,EALLA,YACAC,EAIK,EAJLA,YACAC,EAGK,EAHLA,YACAC,EAEK,EAFLA,WACAC,EACK,EADLA,WAEA,OACC,eAACN,EAAD,WACC,cAAC,EAAD,CACCT,KAAK,aACLC,MAAOU,EACPxB,WAAY0B,EAAc,EAC1BzB,IAAK0B,IAEN,cAAC,EAAD,CACCd,KAAK,aACLC,MAAOW,EACPzB,aAAc0B,EAAc,GAC5BzB,IAAK2B,QC7BHC,GAAehC,IAAOiC,OAAV,ooBA2CHC,GARA,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACtC,OACC,cAACL,GAAD,CAAcI,UAAWA,EAAWE,QAASD,EAA7C,SACEF,KCtCEI,GAAYvC,IAAOwC,IAAV,mJA0BAC,GAfE,WAChB,OACC,cAACF,GAAD,CACCG,MAAM,6BACN,cAAY,OACZC,UAAU,QACV,cAAY,MACZC,KAAK,MACLC,QAAQ,cANT,SAQC,sBAAMC,EAAE,0kCClBLC,GAA4B/C,IAAOgD,MAAV,+jBAqBzBC,GAAWjD,IAAOC,IAAV,kIAQRiD,GAAoBlD,YAAOkC,GAAPlC,CAAH,iHAQjBmD,GAAuBnD,YAAOkC,GAAPlC,CAAH,+EAuCXoD,GAlCF,SAAC,GASP,IARNC,EAQK,EARLA,aACAC,EAOK,EAPLA,gBACAC,EAMK,EANLA,aACA5B,EAKK,EALLA,YACAC,EAIK,EAJLA,YACAC,EAGK,EAHLA,YACAC,EAEK,EAFLA,WACAC,EACK,EADLA,WAEA,OACC,eAACgB,GAAD,WACC,cAAC,GAAD,CACCpB,YAAaA,EACbC,YAAaA,EACbC,YAAaA,EACbC,WAAYA,EACZC,WAAYA,IAEb,eAACkB,GAAD,WACC,cAACC,GAAD,CACCb,aAAciB,EACdD,aAAcA,EAFf,SAIEA,EAAe,WAAa,eAE9B,cAACF,GAAD,CAAsBd,aAAckB,EAApC,SACC,cAAC,GAAD,aCxECC,GAAUxD,IAAOC,IAAV,oEAKPwD,GAAOzD,IAAOC,IAAV,4TAWA,SAACC,GAAD,OACY,IAAnBA,EAAMwD,SAAkB,SACL,IAAnBxD,EAAMwD,UAAkB,YACL,IAAnBxD,EAAMwD,UAAkB,YAGrBC,GAAQ3D,YAAOyD,GAAPzD,CAAH,+EAIL4D,GAAQ5D,YAAOyD,GAAPzD,CAAH,gFAaI6D,GATL,SAAC,GAA6B,IAA3BzB,EAA0B,EAA1BA,UAAWsB,EAAe,EAAfA,SACvB,OACC,eAACF,GAAD,CAASpB,UAAWA,EAApB,UACC,cAACuB,GAAD,CAAOD,SAAUA,IACjB,cAACE,GAAD,CAAOF,SAAUA,QClCdI,GAAU9D,IAAOC,IAAV,oEAKP8D,GAAU/D,IAAOC,IAAV,qXAOI,SAACC,GAAD,OACK,IAAnBA,EAAMwD,SAAkB,SACL,IAAnBxD,EAAMwD,UAAkB,WACL,IAAnBxD,EAAMwD,UAAkB,YAgBZM,GARL,SAAC,GAA6B,IAA3B5B,EAA0B,EAA1BA,UAAWsB,EAAe,EAAfA,SACvB,OACC,cAACI,GAAD,CAAS1B,UAAWA,EAApB,SACC,cAAC2B,GAAD,CAASL,SAAUA,OCvBhBO,GAAiBjE,IAAOC,IAAV,6PAGF,SAACC,GAAD,OACI,IAAnBA,EAAMwD,SAAkB,OACL,IAAnBxD,EAAMwD,UAAkB,WACL,IAAnBxD,EAAMwD,UAAkB,YAOrBQ,GAAYlE,IAAOC,IAAV,uNAYTkE,GAASnE,YAAO6D,GAAP7D,CAAH,sFAQNoE,GAASpE,YAAOgE,GAAPhE,CAAH,sFAqEGqE,GA7DE,SAAC,GASX,IARNC,EAQK,EARLA,IACAC,EAOK,EAPLA,OACA1C,EAMK,EANLA,YACA2C,EAKK,EALLA,SACAC,EAIK,EAJLA,OACApB,EAGK,EAHLA,aACAqB,EAEK,EAFLA,YACAhB,EACK,EADLA,SAEA,EAAkCxC,oBAAS,GAA3C,mBAAOyD,EAAP,KAAkBC,EAAlB,KACA,EAAwB1D,mBAAS,KAAjC,mBAAO2D,EAAP,KAAaC,EAAb,KAEMC,EAAeC,uBACpB,SAACvE,GAEgB,UAAfA,EAAMwE,MACS,UAAfxE,EAAMyE,MACS,UAAfzE,EAAMyE,OAEW,IAAbV,IAAuC,IAAjBnB,GACzBqB,EAAYJ,EAAKC,EAAQM,KAI5B,CAACA,EAAMN,EAAQlB,EAAcmB,EAAUF,EAAKI,IAGvCS,EAAYH,uBAAY,SAACvE,GACX,eAAfA,EAAMwE,KACTL,GAAa,GACY,eAAfnE,EAAMwE,MAChBL,GAAa,KAEZ,IAMH,OAJAQ,qBAAU,WACTN,EAAQjD,EAAc,EAAI,IAAM,OAC9B,CAACA,IAGH,eAACoC,GAAD,CAAgBP,SAAUA,EAA1B,UACC,cAACQ,GAAD,CACC5B,QAASyC,EACT1D,WAAY0D,EACZM,aAAcF,EACdG,aAAcH,EACdI,SAAS,MAEG,MAAXd,GAAkB,cAAC,GAAD,CAAGf,SAAUA,KACpB,MAAXe,GAAkB,cAAC,GAAD,CAAGf,SAAUA,KAC/BiB,GAAsB,MAATE,IAAiC,IAAjBxB,GAC7B,cAACc,GAAD,CAAQT,SAAUA,KAElBiB,GAAsB,MAATE,IAAiC,IAAjBxB,GAC7B,cAACe,GAAD,CAAQV,SAAUA,QClGjB8B,GAAaxF,IAAOC,IAAV,ypBAeO,SAACC,GAAD,uBAAqBA,EAAMwD,SAA3B,aACG,SAACxD,GAAD,uBAAqBA,EAAMuF,YAA3B,aAEb,SAACvF,GAAD,OACS,IAAnBA,EAAMwD,SAAkB,SACL,IAAnBxD,EAAMwD,UAAkB,SACL,IAAnBxD,EAAMwD,UAAkB,YAUrBgC,GAAkB,SACvBhC,EACA+B,EACAE,EACA9D,EACAwB,EACAqB,GAIA,IAFA,IAAIkB,EAAY,GAEPtB,EAAM,EAAGA,EAAMZ,EAAUY,IACjC,IAAK,IAAIC,EAAS,EAAGA,EAASkB,EAAalB,IAAU,CACpD,IAAMC,EAAuC,KAA5BmB,EAAWrB,GAAKC,GAC3BE,EAASD,GAAYmB,EAAWrB,GAAKC,GAE3CqB,EAAUC,KACT,cAAC,GAAD,CAECvB,IAAKA,EACLC,OAAQA,EACR1C,YAAaA,EACb2C,SAAUA,EACVC,OAAQA,EACRpB,aAAcA,EACdqB,YAAaA,EACbhB,SAAUA,GARL,CAACY,EAAKC,KAcf,OAAOqB,GA4BOE,GAzBF,SAAC,GAOP,IANNpC,EAMK,EANLA,SACA+B,EAKK,EALLA,YACAE,EAIK,EAJLA,WACA9D,EAGK,EAHLA,YACAwB,EAEK,EAFLA,aACA0C,EACK,EADLA,iBAKA,OACC,cAACP,GAAD,CAAY9B,SAAUA,EAAU+B,YAAaA,EAA7C,SACEC,GACAhC,EACA+B,EACAE,EACA9D,EACAwB,GAViB,SAACiB,EAAKC,EAAQM,GAAd,OACnBkB,EAAiBzB,EAAKC,EAAQM,SC3E1BmB,GAAehG,IAAOiG,OAAV,6YA0CHC,GAnBA,WACd,OACC,cAACF,GAAD,UACC,qCACG,IACF,mBACCG,KAAK,+BACLC,MAAM,oCACD1F,OAAO,SACP2F,IAAI,aAJV,2BAOK,IATN,eC1BGpC,GAAiBjE,IAAOC,IAAV,sOAMF,SAACC,GAAD,OACA,IAAfA,EAAMoG,KAAc,SACL,IAAfpG,EAAMoG,MAAc,WACL,IAAfpG,EAAMoG,MAAc,YAORjC,GAJE,SAAC,GAAc,IAAZiC,EAAW,EAAXA,KACnB,OAAO,cAAC,GAAD,CAAgBA,KAAMA,KCZxBd,GAAaxF,IAAOC,IAAV,yjBAWO,SAACC,GAAD,uBAAqBA,EAAMoG,KAA3B,aACG,SAACpG,GAAD,uBAAqBA,EAAMqG,QAA3B,aACb,SAACrG,GAAD,OACK,IAAfA,EAAMoG,KAAc,SACL,IAAfpG,EAAMoG,MAAc,WACL,IAAfpG,EAAMoG,MAAc,YAcjBZ,GAAkB,SAACY,EAAMC,GAG9B,IAFA,IAAIX,EAAY,GAEPtB,EAAM,EAAGA,EAAMgC,EAAMhC,IAC7B,IAAK,IAAIC,EAAS,EAAGA,EAASgC,EAAShC,IACtCqB,EAAUC,KAAK,cAAC,GAAD,CAA8BS,KAAMA,GAArB,CAAChC,EAAKC,KAItC,OAAOqB,GAWOY,GARE,SAAC,GAAuB,IAArBF,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACzB,OACC,cAAC,GAAD,CAAYnE,UAAU,aAAakE,KAAMA,EAAMC,QAASA,EAAxD,SACEb,GAAgBY,EAAMC,MC7CpBE,GAAsBzG,IAAO0G,KAAV,6XAmBnBC,GAAc3G,IAAOC,IAAV,ioBA0DF2G,GAlCM,SAAC,GAKf,IAJNC,EAIK,EAJLA,aACAC,EAGK,EAHLA,YACAC,EAEK,EAFLA,WACAC,EACK,EADLA,WAEMC,EAAiB,SAACC,EAASC,EAAYC,GAC5CP,EAAaK,EAASC,GACtBL,EAAYM,GACZL,KAGD,OACC,eAACN,GAAD,WACC,eAACE,GAAD,CAAarE,QAAS,kBAAM2E,EAAe,EAAG,EAAG,IAAjD,UACC,qCACA,gDACA,cAAC,GAAD,CAAUX,KAAM,EAAGC,QAAS,EAAGS,WAAYA,OAE5C,eAACL,GAAD,CAAarE,QAAS,kBAAM2E,EAAe,EAAG,EAAG,IAAjD,UACC,qCACA,gDACA,cAAC,GAAD,CAAUX,KAAM,EAAGC,QAAS,EAAGS,WAAYA,OAE5C,eAACL,GAAD,CAAarE,QAAS,kBAAM2E,EAAe,EAAG,EAAG,IAAjD,UACC,qCACA,gDAEA,cAAC,GAAD,CAAUX,KAAM,EAAGC,QAAS,EAAGS,WAAYA,WCxEzCzE,GAAYvC,IAAOwC,IAAV,yOAyCA6E,GAvBG,SAAC,GAAsB,IAApBhF,EAAmB,EAAnBA,aACpB,OACC,eAAC,GAAD,CACCC,QAASD,EACTiF,MAAM,KACNC,OAAO,KACPC,KAAK,OACL3E,QAAQ,YALT,UAOC,sBACC4E,cAAc,QACdC,eAAe,QACf5E,EAAE,2BAEH,sBACC2E,cAAc,QACdC,eAAe,QACf5E,EAAE,+BCjCA6E,GAAkB3H,IAAOC,IAAV,kKAUf2H,GAAgB5H,IAAOC,IAAV,oIAQb4H,GAAc7H,IAAOC,IAAV,ujBAsBX6H,GAAiB9H,IAAOC,IAAV,uKA+BL8H,GArBD,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,cAAenB,EAAwC,EAAxCA,aAAcoB,EAA0B,EAA1BA,oBAC7C,OACC,qCACC,cAACL,GAAD,UACC,eAACC,GAAD,WACC,eAACC,GAAD,WACC,6CACA,cAAC,GAAD,CAAWzF,aAAc2F,OAE1B,cAAC,GAAD,CACCnB,aAAcA,EACdC,YAAamB,EACblB,WAAYiB,SAIf,cAACL,GAAD,CAAiBrF,QAAS0F,Q,QCtEhBE,GAA0B,SAAC5B,EAAMC,GAI7C,IAFA,IAAI4B,EAAoB,GAEf7D,EAAM,EAAGA,EAAMgC,EAAMhC,IAAO,CACpC6D,EAAkB7D,GAAO,GACzB,IAAK,IAAIC,EAAS,EAAGA,EAASgC,EAAShC,IACtC4D,EAAkB7D,GAAKC,GAAU,GAInC,OAAO4D,GAGKC,GAA2B,SAAC9B,EAAMC,GAI9C,IAFA,IAAI8B,EAAY,GAEPC,EAAI,EAAGA,EAAIhC,EAAOC,EAAU,EAAG+B,IACvCD,EAAUxC,KAAK,IAGhB,OAAOwC,GAGKE,GAAkB,SAACC,EAAmBC,GAClD,IADsE,EAClEC,GAAY,EACZC,EAAS,KAFyD,eAK/CH,GAL+C,IAKtE,2BAA0C,CAAC,IAAD,EAAjCI,EAAiC,QACrCC,EAAS,EACThE,EAAO,GAF8B,eAGnB+D,GAHmB,IAGzC,2BAAkC,CAAC,IAA1BE,EAAyB,QACjC,GAAIA,IAAcjE,GAAsB,KAAdiE,GAIzB,KAFAD,IAEeJ,EAAiB,CAE/BC,GAAY,EACZC,EAAS9D,EACT,YAIDgE,EAAS,EACThE,EAAOiE,GAjBgC,gCAL4B,8BA2BtE,MAAO,CAACJ,EAAWC,ICvCdI,GAAWC,YAAH,mUAsBRC,GAAejJ,IAAOC,IAAV,k9DA6EZiJ,GAAYlJ,IAAOC,IAAV,scA0JAkJ,GAnIH,WACX,MAAwBjI,mBAAS,GAAjC,mBAAOoF,EAAP,KAAa8C,EAAb,KACA,EAA8BlI,mBAAS,GAAvC,mBAAOqF,EAAP,KAAgB8C,EAAhB,KACA,EAA8CnI,mBAAS,GAAvD,mBAAOuH,EAAP,KAAwBa,EAAxB,KACA,EAAoCpI,mBACnCgH,GAAwB5B,EAAMC,IAD/B,mBAAOZ,EAAP,KAAmB4D,EAAnB,KAGA,EAAkCrI,mBAAS,GAA3C,mBAAOsI,EAAP,KAAkBC,EAAlB,KACA,EAAsCvI,mBAASsI,GAA/C,mBAAO3H,EAAP,KAAoB6H,EAApB,KACA,EAAwCxI,oBAAS,GAAjD,mBAAOmC,EAAP,KAAqBsG,EAArB,KACA,EAAsCzI,oBAAS,GAA/C,mBAAO0I,EAAP,KAAoBC,EAApB,KACA,EAAoC3I,oBAAS,GAA7C,mBAAOY,EAAP,KAAmBgI,EAAnB,KACA,EAAoC5I,oBAAS,GAA7C,mBAAOa,EAAP,KAAmBgI,EAAnB,KACA,EAA8C7I,mBAAS,GAAvD,mBAAO8I,EAAP,KAAwBC,EAAxB,KACA,EAA8C/I,mBAAS,GAAvD,mBAAOgJ,EAAP,KAAwBC,EAAxB,KAEM7G,EAAkB0B,uBACvB,SACCvE,GAIK,IAHLyG,EAGI,uDAHMZ,EACVa,EAEI,uDAFSZ,EAGbgD,EAAcrB,GAAwBhB,EAASC,IAC/CwC,GAAgB,GAChBD,EAAeF,EAAY,GAC3BC,GAAa,SAACW,GAAD,OAAkBA,EAAe,KAC9CN,GAAc,GACdC,GAAc,KAEf,CAACxD,EAASiD,EAAWnG,EAAciD,IAG9BP,EAAmBf,uBAAY,SAACV,EAAKC,EAAQM,GAClD0E,GAAc,SAACf,GACd,IAAI6B,EAAa,YAAO7B,GAExB,OADA6B,EAAc/F,GAAKC,GAAUM,EACtBwF,KAGRX,GAAe,SAACY,GAAD,OAAsBA,EAAmB,OACtD,IAEGC,GAAcvF,uBAAY,WAC/B,OAAqB6E,GAAdD,KACL,CAACA,IAEEY,GAAkBxF,uBACvB,SAACkC,EAASC,GACTiC,EAAQlC,GACRmC,EAAWlC,GACX7D,EAAgB,KAAM4D,EAASC,KAEhC,CAAC7D,IAyCF,OArCA8B,qBAAU,WACT,MAA4BmD,GAAgB5C,EAAY8C,GAAxD,mBAAOgC,EAAP,KAAeC,EAAf,KACA,ED3I0B,SAC3BlC,EACAmC,EACAC,EACAnC,GAEA,IADI,EACAoC,EAAwB3C,GAAwByC,EAAQC,GADxD,eAIwBpC,EAAkBsC,WAJ1C,IAIJ,2BAAyD,CAAC,IAAD,2BAA/CxC,EAA+C,KAA5CM,EAA4C,oBAClCA,EAAWkC,WADuB,IACxD,2BAA4C,CAAC,IAAD,yBAAlCC,EAAkC,KAA/BlG,EAA+B,KAC3CgG,EAAsBE,GAAGzC,GAAKzD,GAFyB,gCAJrD,8BAYJ,OAFkB0D,GAAgBsC,EAAuBpC,GC4HtBuC,CACjCrF,EACAY,EACAD,EACAmC,GAJD,mBAAOwC,EAAP,KAAkBC,EAAlB,KAMA,ED7H4B,SAC7B1C,EACAmC,EACAC,EACAnC,GAEA,IADI,EACA0C,EAA6B/C,GAAyBuC,EAAQC,GAC9DQ,EAA8BhD,GAAyBuC,EAAQC,GAF/D,eAKwBpC,EAAkBsC,WAL1C,IAKJ,2BAAyD,CAAC,IAAD,2BAA/CxC,EAA+C,KAA5CM,EAA4C,oBAClCA,EAAWkC,WADuB,IACxD,2BAA4C,CAAC,IAAD,yBAAlCC,EAAkC,KAA/BlG,EAA+B,KAC3CsG,EAA2B7C,EAAIyC,GAAGlF,KAAKhB,GACvCuG,EAA4B9C,EAAIyC,EAAIJ,EAAS,GAAG9E,KAAKhB,IAHE,gCALrD,8BAYJ,IAAMwG,EAAgB,sBAClBF,GADkB,YAElBC,IACFE,QAAO,SAACC,GAAD,OAAiBA,EAAY3K,QAAU6H,KAIhD,OAFoBF,GAAgB8C,EAAe5C,GCuGZ+C,CACrC7F,EACAY,EACAD,EACAmC,GAJD,mBAAOgD,EAAP,KAAoBC,EAApB,MAQCjB,GACAQ,GACAQ,GACA5J,EAAc2H,IAAclD,EAAOC,KAEnCoD,GAAgB,GAChBD,GAAe,SAACY,GAAD,OAAsBA,EAAmB,KACtC,MAAdI,GAAsC,MAAjBQ,GAA2C,MAAnBQ,GAChD5B,GAAc,GACdG,GAAmB,SAAC0B,GAAD,OAAqBA,EAAkB,MAE5C,MAAdjB,GACiB,MAAjBQ,GACmB,MAAnBQ,IAEA3B,GAAc,GACdI,GAAmB,SAACwB,GAAD,OAAqBA,EAAkB,SAG1D,CAAChG,IAGH,qCACC,cAACoD,GAAD,IACA,eAACE,GAAD,WACC,eAACC,GAAD,WACC,cAAC,GAAD,CACC7F,aAAcA,EACdC,gBAAiBA,EACjBC,aAAcgH,GACd5I,YAAaqI,EACbpI,YAAasI,EACbrI,YAAaA,EACbC,WAAYA,EACZC,WAAYA,IAEb,cAAC,GAAD,CACC2B,SAAU4C,EACVb,YAAac,EACbZ,WAAYA,EACZ9D,YAAaA,EACbwB,aAAcA,EACd0C,iBAAkBA,OAGpB,cAAC,GAAD,IACC6D,GACA,cAAC,GAAD,CACC5B,cAAeuC,GACf1D,aAAc2D,GACdvC,oBAAqBqB,WC7P3BsC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,GAAD,MAEDC,SAASC,eAAe,SlBWlB,SAAkBnN,GACvB,GAA6C,kBAAmBC,UAAW,CAIzE,GAHAW,QAAQC,IAAI,qBAEM,IAAIuM,IAAIC,GAAwB3N,OAAOC,SAAS2H,MACpDgG,SAAW5N,OAAOC,SAAS2N,OAIvC,OAGF5N,OAAO6N,iBAAiB,QAAQ,WAC9B,IAAMxN,EAAK,UAAMsN,GAAN,sBAEP7N,IAgEV,SAAiCO,EAAOC,GAEtCwN,MAAMzN,EAAO,CACX0N,QAAS,CAAE,iBAAkB,YAE5BrN,MAAK,SAACsN,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C7N,UAAUC,cAAc6N,MAAM3N,MAAK,SAACC,GAClCA,EAAa2N,aAAa5N,MAAK,WAC7BV,OAAOC,SAASsO,eAKpBnO,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IAAI,oEAtFVqN,CAAwBnO,EAAOC,GAI/BC,UAAUC,cAAc6N,MAAM3N,MAAK,WACjCQ,QAAQC,IACN,+GAMJf,EAAgBC,EAAOC,OkBrC/BmO,K","file":"static/js/main.36111c13.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    console.log(\"GET REGISTERED :D\")\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}","import { useState } from 'react';\nimport styled from 'styled-components';\n\nconst StyledPlayer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\twidth: fit-content;\n\tfont-size: 1.5rem;\n\tpadding: 0.75rem;\n\tborder-radius: 0.75rem;\n\tborder: 0.5rem solid transparent;\n\ttransition: all 200ms ease-out;\n\n\t${(props) => props.turnActive && `border-color:#7051b8;`}\n\t${(props) => props.win && 'border-color: #109648;'}\n`;\n\nconst StyledPlayerName = styled.h2``;\n\nconst Score = styled.div`\n\tfont-size: 3rem;\n`;\n\nconst checkInputLength = (event) => {\n\tif (event.target.innerText.length <= 12 && event.key !== 'Enter') {\n\t\treturn true;\n\t} else {\n\t\tevent.preventDefault();\n\t\treturn false;\n\t}\n};\n\nconst Player = ({ name, score, turnActive, win }) => {\n\tconst [playerName, setPlayerName] = useState(name);\n\n\tconst updatePlayerName = (event) => {\n\t\tsetPlayerName(event.target.innerText);\n\t};\n\n\treturn (\n\t\t<StyledPlayer turnActive={turnActive} win={win}>\n\t\t\t<StyledPlayerName\n\t\t\t\tonKeyPress={checkInputLength}\n\t\t\t\tonBlur={updatePlayerName}\n\t\t\t\tcontentEditable='true'\n\t\t\t\tsuppressContentEditableWarning={true}\n\t\t\t>\n\t\t\t\t{playerName}\n\t\t\t</StyledPlayerName>\n\t\t\t<Score>{score}</Score>\n\t\t</StyledPlayer>\n\t);\n};\n\nexport default Player;\n","import styled from 'styled-components';\nimport Player from './Player';\n\nconst PlayerInfoWrapper = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-around;\n\twidth: 100%;\n\tbackground-color: #f7f7f7;\n\tpadding: 1rem;\n\tborder-radius: 1rem 1rem 0 0;\n`;\n\nconst PlayerInfo = ({\n\tplayer1Wins,\n\tplayer2Wins,\n\tturnCounter,\n\tplayer1Win,\n\tplayer2Win,\n}) => {\n\treturn (\n\t\t<PlayerInfoWrapper>\n\t\t\t<Player\n\t\t\t\tname=\"Player (X)\"\n\t\t\t\tscore={player1Wins}\n\t\t\t\tturnActive={turnCounter % 2}\n\t\t\t\twin={player1Win}\n\t\t\t/>\n\t\t\t<Player\n\t\t\t\tname=\"Player (O)\"\n\t\t\t\tscore={player2Wins}\n\t\t\t\tturnActive={!(turnCounter % 2)}\n\t\t\t\twin={player2Win}\n\t\t\t/>\n\t\t</PlayerInfoWrapper>\n\t);\n};\n\nexport default PlayerInfo;\n","import styled from 'styled-components';\n\nconst StyledButton = styled.button`\n\tposition: relative;\n\ttop: 0;\n\tdisplay: inline-block;\n\tborder: 0;\n\tpadding: 1rem 2rem;\n\tborder-radius: 1rem;\n\tcursor: pointer;\n\n\tbackground-color: #7051b8;\n\tcolor: white;\n\tbox-shadow: 0 1rem 0 #553795;\n\n\tfont-size: 2rem;\n\tfont-family: 'Saira Condensed', sans-serif;\n\tfont-weight: 700;\n\tletter-spacing: 2pt;\n\twhite-space: nowrap;\n\tmargin-bottom: 1rem;\n\n\ttransition: all 0.2s;\n\n\t&:hover {\n\t\ttop: 0.1rem;\n\t\tbox-shadow: 0 0.9rem 0px #553795;\n\t\ttransition: all 0.2s;\n\t}\n\n\t&:active {\n\t\ttop: 1rem;\n\t\tbox-shadow: 0 2px 0px #553795;\n\t\ttransition: all 0.2s;\n\t}\n`;\n\nconst Button = ({ children, className, clickHandler }) => {\n\treturn (\n\t\t<StyledButton className={className} onClick={clickHandler}>\n\t\t\t{children}\n\t\t</StyledButton>\n\t);\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nconst StyledSVG = styled.svg`\n\ttransition: 200ms ease-out;\n\twidth: 2rem;\n\theight: 2rem;\n\tcursor: pointer;\n\n\tpath {\n\t\tfill: white;\n\t}\n`;\n\nconst GearIcon = () => {\n\treturn (\n\t\t<StyledSVG\n\t\t\txmlns='http://www.w3.org/2000/svg'\n\t\t\taria-hidden='true'\n\t\t\tfocusable='false'\n\t\t\tdata-prefix='fas'\n\t\t\trole='img'\n\t\t\tviewBox='0 0 512 512'\n\t\t>\n\t\t\t<path d='M499.5 332c0-5.66-3.112-11.13-8.203-14.07l-46.61-26.91C446.8 279.6 448 267.1 448 256s-1.242-23.65-3.34-35.02l46.61-26.91c5.092-2.941 8.203-8.411 8.203-14.07c0-14.1-41.98-99.04-63.86-99.04c-2.832 0-5.688 .7266-8.246 2.203l-46.72 26.98C362.9 94.98 342.4 83.1 320 75.16V21.28c0-7.523-5.162-14.28-12.53-15.82C290.8 1.977 273.7 0 256 0s-34.85 1.977-51.48 5.461C197.2 7.004 192 13.76 192 21.28v53.88C169.6 83.1 149.1 94.98 131.4 110.1L84.63 83.16C82.08 81.68 79.22 80.95 76.39 80.95c-19.72 0-63.86 81.95-63.86 99.04c0 5.66 3.112 11.13 8.203 14.07l46.61 26.91C65.24 232.4 64 244 64 256s1.242 23.65 3.34 35.02l-46.61 26.91c-5.092 2.941-8.203 8.411-8.203 14.07c0 14.1 41.98 99.04 63.86 99.04c2.832 0 5.688-.7266 8.246-2.203l46.72-26.98C149.1 417 169.6 428.9 192 436.8v53.88c0 7.523 5.162 14.28 12.53 15.82C221.2 510 238.3 512 255.1 512s34.85-1.977 51.48-5.461C314.8 504.1 320 498.2 320 490.7v-53.88c22.42-7.938 42.93-19.82 60.65-34.97l46.72 26.98c2.557 1.477 5.416 2.203 8.246 2.203C455.3 431 499.5 349.1 499.5 332zM256 336c-44.11 0-80-35.89-80-80S211.9 176 256 176s80 35.89 80 80S300.1 336 256 336z'></path>\n\t\t</StyledSVG>\n\t);\n};\n\nexport default GearIcon;\n","import styled from 'styled-components';\nimport PlayerInfo from './PlayerInfo';\nimport Button from '../Button';\nimport GearIcon from '../Icons/GearIcon';\n\nconst PlayerInfoControlsWrapper = styled.aside`\n\tgrid-area: controls;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tbackground-color: #ffffff80;\n\tborder-radius: 1rem;\n\tbox-shadow: 0 12px 17px 2px rgba(0, 0, 0, 0.14),\n\t\t0 5px 22px 4px rgba(0, 0, 0, 0.12), 0 7px 8px -4px rgba(0, 0, 0, 0.2),\n\t\tinset 0 4px 5px 0 rgba(255, 255, 255, 0.14),\n\t\tinset 0 1px 10px 0 rgba(255, 255, 255, 0.12),\n\t\tinset 0 2px 4px -1px rgba(255, 255, 255, 0.2);\n\n\t@media (min-width: 1440px) {\n\t\talign-self: start;\n\t\tjustify-self: end;\n\t}\n`;\n\nconst Controls = styled.div`\n\tdisplay: flex;\n\tgap: 1rem;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 1rem;\n`;\n\nconst StyledResetButton = styled(Button)`\n\tmin-width: 18rem;\n\n\t@media (min-height: 800px) {\n\t\tpadding: 2rem 3rem;\n\t}\n`;\n\nconst StyledSettingsButton = styled(Button)`\n\tpadding: 0.5rem 1rem 0;\n\theight: fit-content;\n`;\n\nconst Menu = ({\n\tgameComplete,\n\tresetBoardState,\n\tshowSettings,\n\tplayer1Wins,\n\tplayer2Wins,\n\tturnCounter,\n\tplayer1Win,\n\tplayer2Win,\n}) => {\n\treturn (\n\t\t<PlayerInfoControlsWrapper>\n\t\t\t<PlayerInfo\n\t\t\t\tplayer1Wins={player1Wins}\n\t\t\t\tplayer2Wins={player2Wins}\n\t\t\t\tturnCounter={turnCounter}\n\t\t\t\tplayer1Win={player1Win}\n\t\t\t\tplayer2Win={player2Win}\n\t\t\t/>\n\t\t\t<Controls>\n\t\t\t\t<StyledResetButton\n\t\t\t\t\tclickHandler={resetBoardState}\n\t\t\t\t\tgameComplete={gameComplete}\n\t\t\t\t>\n\t\t\t\t\t{gameComplete ? 'New Game' : 'Reset Game'}\n\t\t\t\t</StyledResetButton>\n\t\t\t\t<StyledSettingsButton clickHandler={showSettings}>\n\t\t\t\t\t<GearIcon />\n\t\t\t\t</StyledSettingsButton>\n\t\t\t</Controls>\n\t\t</PlayerInfoControlsWrapper>\n\t);\n};\n\nexport default Menu;\n","import styled from 'styled-components';\n\nconst StyledX = styled.div`\n\theight: 100%;\n\tposition: relative;\n`;\n\nconst XBar = styled.div`\n\tposition: absolute;\n\tleft: 50%;\n\ttop: 50%;\n\theight: 80%;\n\tborder-radius: 0.3rem;\n\tbackground-color: white;\n\tbox-shadow: 0 12px 17px 2px rgba(255, 255, 255, 0.14),\n\t\t0 5px 22px 4px rgba(255, 255, 255, 0.12),\n\t\t0 7px 8px -4px rgba(255, 255, 255, 0.2);\n\n\twidth: ${(props) =>\n\t\t(props.gridRows === 3 && '1.5rem') ||\n\t\t(props.gridRows === 5 && '1.15rem') ||\n\t\t(props.gridRows === 7 && '0.8rem')};\n`;\n\nconst XBar1 = styled(XBar)`\n\ttransform: translate(-50%, -50%) rotate(45deg);\n`;\n\nconst XBar2 = styled(XBar)`\n\ttransform: translate(-50%, -50%) rotate(-45deg);\n`;\n\nconst X = ({ className, gridRows }) => {\n\treturn (\n\t\t<StyledX className={className}>\n\t\t\t<XBar1 gridRows={gridRows} />\n\t\t\t<XBar2 gridRows={gridRows} />\n\t\t</StyledX>\n\t);\n};\n\nexport default X;\n","import styled from 'styled-components';\n\nconst StyledO = styled.div`\n\theight: 100%;\n\tposition: relative;\n`;\n\nconst Outline = styled.div`\n\tposition: absolute;\n\tleft: 50%;\n\ttop: 50%;\n\theight: 80%;\n\twidth: 80%;\n\tborder: solid white 0.8rem;\n\tborder-width: ${(props) =>\n\t\t(props.gridRows === 3 && '1.5rem') ||\n\t\t(props.gridRows === 5 && '1.1rem') ||\n\t\t(props.gridRows === 7 && '0.8rem')};\n\tborder-radius: 80%;\n\ttransform: translate(-50%, -50%);\n\tbox-shadow: 0 12px 17px 2px rgba(255, 255, 255, 0.14),\n\t\t0 5px 22px 4px rgba(255, 255, 255, 0.12),\n\t\t0 7px 8px -4px rgba(255, 255, 255, 0.2);\n`;\n\nconst O = ({ className, gridRows }) => {\n\treturn (\n\t\t<StyledO className={className}>\n\t\t\t<Outline gridRows={gridRows} />\n\t\t</StyledO>\n\t);\n};\n\nexport default O;\n","import { useCallback, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport X from './X';\nimport O from './O';\n\nconst StyledGridCell = styled.div`\n\tposition: relative;\n\tbackground-color: #000000cc;\n\tborder-radius: ${(props) =>\n\t\t(props.gridRows === 3 && '1rem') ||\n\t\t(props.gridRows === 5 && '0.8rem') ||\n\t\t(props.gridRows === 7 && '0.6rem')};\n\n\tbox-shadow: inset 0 4px 5px 0 rgba(0, 0, 0, 0.14),\n\t\tinset 0 1px 10px 0 rgba(0, 0, 0, 0.12),\n\t\tinset 0 2px 4px -1px rgba(0, 0, 0, 0.2);\n`;\n\nconst HoverArea = styled.div`\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\tbackground-color: transparent;\n\twidth: 75%;\n\theight: 75%;\n\ttransform: translate(-50%, -50%);\n\tz-index: 1;\n\tcursor: pointer;\n`;\n\nconst HoverX = styled(X)`\n\topacity: 0.75;\n\n\tdiv {\n\t\tbox-shadow: unset;\n\t}\n`;\n\nconst HoverO = styled(O)`\n\topacity: 0.75;\n\n\tdiv {\n\t\tbox-shadow: unset;\n\t}\n`;\n\nconst GridCell = ({\n\trow,\n\tcolumn,\n\tturnCounter,\n\toccupied,\n\toutput,\n\tgameComplete,\n\tsetSelected,\n\tgridRows,\n}) => {\n\tconst [isHovered, setIsHovered] = useState(false);\n\tconst [XorO, setXorO] = useState('X');\n\n\tconst cellSelected = useCallback(\n\t\t(event) => {\n\t\t\tif (\n\t\t\t\tevent.type === 'click' ||\n\t\t\t\tevent.code === 'Enter' ||\n\t\t\t\tevent.code === 'Space'\n\t\t\t) {\n\t\t\t\tif (occupied === false && gameComplete === false) {\n\t\t\t\t\tsetSelected(row, column, XorO);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[XorO, column, gameComplete, occupied, row, setSelected]\n\t);\n\n\tconst hoverCell = useCallback((event) => {\n\t\tif (event.type === 'mouseenter') {\n\t\t\tsetIsHovered(true);\n\t\t} else if (event.type === 'mouseleave') {\n\t\t\tsetIsHovered(false);\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tsetXorO(turnCounter % 2 ? 'X' : 'O');\n\t}, [turnCounter]);\n\n\treturn (\n\t\t<StyledGridCell gridRows={gridRows}>\n\t\t\t<HoverArea\n\t\t\t\tonClick={cellSelected}\n\t\t\t\tonKeyPress={cellSelected}\n\t\t\t\tonMouseEnter={hoverCell}\n\t\t\t\tonMouseLeave={hoverCell}\n\t\t\t\ttabIndex='0'\n\t\t\t/>\n\t\t\t{(output === 'X' && <X gridRows={gridRows} />) ||\n\t\t\t\t(output === 'O' && <O gridRows={gridRows} />) ||\n\t\t\t\t(isHovered && XorO === 'X' && gameComplete === false && (\n\t\t\t\t\t<HoverX gridRows={gridRows} />\n\t\t\t\t)) ||\n\t\t\t\t(isHovered && XorO === 'O' && gameComplete === false && (\n\t\t\t\t\t<HoverO gridRows={gridRows} />\n\t\t\t\t))}\n\t\t</StyledGridCell>\n\t);\n};\n\nexport default GridCell;\n","import styled from 'styled-components';\nimport GridCell from './GridCell';\n\nconst StyledGrid = styled.div`\n\tgrid-area: grid;\n\taspect-ratio: 1;\n\twidth: clamp(300px, 100%, 650px);\n\n\tbackground-color: #ffffff80;\n\tpadding: 1.25rem;\n\tborder-radius: 1rem;\n\tbox-shadow: 0 12px 17px 2px rgba(0, 0, 0, 0.14),\n\t\t0 5px 22px 4px rgba(0, 0, 0, 0.12), 0 7px 8px -4px rgba(0, 0, 0, 0.2),\n\t\tinset 0 4px 5px 0 rgba(255, 255, 255, 0.14),\n\t\tinset 0 1px 10px 0 rgba(255, 255, 255, 0.12),\n\t\tinset 0 2px 4px -1px rgba(255, 255, 255, 0.2);\n\n\tdisplay: grid;\n\tgrid-template-rows: ${(props) => `repeat(${props.gridRows}, 1fr)`};\n\tgrid-template-columns: ${(props) => `repeat(${props.gridColumns}, 1fr)`};\n\n\tgrid-gap: ${(props) =>\n\t\t(props.gridRows === 3 && '1.2rem') ||\n\t\t(props.gridRows === 5 && '1rem') ||\n\t\t(props.gridRows === 7 && '0.8rem')};\n\n\talign-self: start;\n\n\t@media (min-width: 1440px) {\n\t\tpadding: 2rem;\n\t\twidth: 70vh;\n\t}\n`;\n\nconst createGridCells = (\n\tgridRows,\n\tgridColumns,\n\tboardState,\n\tturnCounter,\n\tgameComplete,\n\tsetSelected\n) => {\n\tlet gridCells = [];\n\n\tfor (let row = 0; row < gridRows; row++) {\n\t\tfor (let column = 0; column < gridColumns; column++) {\n\t\t\tconst occupied = boardState[row][column] === '' ? false : true;\n\t\t\tconst output = occupied && boardState[row][column];\n\n\t\t\tgridCells.push(\n\t\t\t\t<GridCell\n\t\t\t\t\tkey={[row, column]}\n\t\t\t\t\trow={row}\n\t\t\t\t\tcolumn={column}\n\t\t\t\t\tturnCounter={turnCounter}\n\t\t\t\t\toccupied={occupied}\n\t\t\t\t\toutput={output}\n\t\t\t\t\tgameComplete={gameComplete}\n\t\t\t\t\tsetSelected={setSelected}\n\t\t\t\t\tgridRows={gridRows}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t}\n\n\treturn gridCells;\n};\n\nconst Grid = ({\n\tgridRows,\n\tgridColumns,\n\tboardState,\n\tturnCounter,\n\tgameComplete,\n\tupdateBoardState,\n}) => {\n\tconst setSelected = (row, column, XorO) =>\n\t\tupdateBoardState(row, column, XorO);\n\n\treturn (\n\t\t<StyledGrid gridRows={gridRows} gridColumns={gridColumns}>\n\t\t\t{createGridCells(\n\t\t\t\tgridRows,\n\t\t\t\tgridColumns,\n\t\t\t\tboardState,\n\t\t\t\tturnCounter,\n\t\t\t\tgameComplete,\n\t\t\t\tsetSelected\n\t\t\t)}\n\t\t</StyledGrid>\n\t);\n};\n\nexport default Grid;\n","import styled from 'styled-components';\n\nconst StyledFooter = styled.footer`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\n\tp {\n\t\tbackground-color: #000000cc;\n\t\tcolor: white;\n\t\tpadding: 0.25rem 1rem;\n\t\tborder-radius: 0.5rem 0.5rem 0 0;\n\t\tfont-size: 1.5rem;\n\n\t\ta {\n\t\t\ttext-decoration: underline;\n\t\t\tcolor: inherit;\n\n\t\t\t&:hover {\n\t\t\t\ttext-decoration: underline;\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst Footer = () => {\n\treturn (\n\t\t<StyledFooter>\n\t\t\t<p>\n\t\t\t\t©{' '}\n\t\t\t\t<a\n\t\t\t\t\thref=\"https://www.trevorleeman.com\"\n\t\t\t\t\ttitle=\"Trevor Leeman's portfolio website\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n\t\t\t\t>\n\t\t\t\t\tTrevor Leeman\n\t\t\t\t</a>{' '}\n\t\t\t\t| 2021\n\t\t\t</p>\n\t\t</StyledFooter>\n\t);\n};\n\nexport default Footer;\n","import styled from 'styled-components';\n\nconst StyledGridCell = styled.div`\n\tbackground-color: #000000cc;\n\tbox-shadow: inset 0 4px 5px 0 rgba(0, 0, 0, 0.14),\n\t\tinset 0 1px 10px 0 rgba(0, 0, 0, 0.12),\n\t\tinset 0 2px 4px -1px rgba(0, 0, 0, 0.2);\n\n\tborder-radius: ${(props) =>\n\t\t(props.rows === 3 && '0.6rem') ||\n\t\t(props.rows === 5 && '0.5rem') ||\n\t\t(props.rows === 7 && '0.4rem')};\n`;\n\nconst GridCell = ({ rows }) => {\n\treturn <StyledGridCell rows={rows} />;\n};\n\nexport default GridCell;\n","import styled from 'styled-components';\nimport GridCell from './MiniGridCell';\n\nconst StyledGrid = styled.div`\n\twidth: 200px;\n\theight: 200px;\n\tbackground-color: #7051b8e6;\n\tpadding: 1.25rem;\n\tborder-radius: 1rem;\n\tbox-shadow: inset 0 4px 5px 0 rgba(255, 255, 255, 0.14),\n\t\tinset 0 1px 10px 0 rgba(255, 255, 255, 0.12),\n\t\tinset 0 2px 4px -1px rgba(255, 255, 255, 0.2);\n\n\tdisplay: grid;\n\tgrid-template-rows: ${(props) => `repeat(${props.rows}, 1fr)`};\n\tgrid-template-columns: ${(props) => `repeat(${props.columns}, 1fr)`};\n\tgrid-gap: ${(props) =>\n\t\t(props.rows === 3 && '0.8rem') ||\n\t\t(props.rows === 5 && '0.6rem') ||\n\t\t(props.rows === 7 && '0.5rem')};\n\n\tscroll-snap-align: center;\n\n\t@media (min-width: 400px) {\n\t\twidth: 300px;\n\t\theight: 300px;\n\t}\n\n\t@media (min-width: 600px) {\n\t\tpadding: 0.8rem;\n\t}\n`;\n\nconst createGridCells = (rows, columns) => {\n\tlet gridCells = [];\n\n\tfor (let row = 0; row < rows; row++) {\n\t\tfor (let column = 0; column < columns; column++) {\n\t\t\tgridCells.push(<GridCell key={[row, column]} rows={rows} />);\n\t\t}\n\t}\n\n\treturn gridCells;\n};\n\nconst MiniGrid = ({ rows, columns }) => {\n\treturn (\n\t\t<StyledGrid className='styledGrid' rows={rows} columns={columns}>\n\t\t\t{createGridCells(rows, columns)}\n\t\t</StyledGrid>\n\t);\n};\n\nexport default MiniGrid;\n","import styled from 'styled-components';\nimport MiniGrid from './MiniGrid/MiniGrid';\n\nconst GameSettingsWrapper = styled.form`\n\tdisplay: grid;\n\tgrid-template-columns: 1fr 1fr 1fr;\n\tpadding: 1rem 1rem 2rem;\n\tgap: 2rem;\n\toverflow: auto;\n\twidth: 100%;\n\tscroll-snap-type: x mandatory;\n\tuser-select: none;\n\n\t@media (min-width: 400px) {\n\t\tpadding: 2rem 2rem 3rem;\n\t}\n\n\t@media (min-width: 800px) and (max-width: 1440px) {\n\t\tgrid-template-columns: 1fr;\n\t}\n`;\n\nconst ModeWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tcursor: pointer;\n\ttransition: 0.1s ease-out;\n\n\t@media (min-width: 400px) {\n\t\t&:hover {\n\t\t\ttransform: scale(1.1);\n\t\t\ttransition: 0.1s ease-in;\n\n\t\t\t.styledGrid {\n\t\t\t\tbox-shadow: 0 12px 17px 2px rgba(0, 0, 0, 0.14),\n\t\t\t\t\t0 5px 22px 4px rgba(0, 0, 0, 0.12), 0 7px 8px -4px rgba(0, 0, 0, 0.2),\n\t\t\t\t\tinset 0 4px 5px 0 rgba(255, 255, 255, 0.14),\n\t\t\t\t\tinset 0 1px 10px 0 rgba(255, 255, 255, 0.12),\n\t\t\t\t\tinset 0 2px 4px -1px rgba(255, 255, 255, 0.2);\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst GameSettings = ({\n\tsetBoardSize,\n\tsetNumToWin,\n\tcloseModal,\n\tglobalRows,\n}) => {\n\tconst updateGridSize = (numRows, numColumns, numToWin) => {\n\t\tsetBoardSize(numRows, numColumns);\n\t\tsetNumToWin(numToWin);\n\t\tcloseModal();\n\t};\n\n\treturn (\n\t\t<GameSettingsWrapper>\n\t\t\t<ModeWrapper onClick={() => updateGridSize(3, 3, 3)}>\n\t\t\t\t<h3>3x3</h3>\n\t\t\t\t<p>Win: 3 in a row</p>\n\t\t\t\t<MiniGrid rows={3} columns={3} globalRows={globalRows} />\n\t\t\t</ModeWrapper>\n\t\t\t<ModeWrapper onClick={() => updateGridSize(5, 5, 4)}>\n\t\t\t\t<h3>5x5</h3>\n\t\t\t\t<p>Win: 4 in a row</p>\n\t\t\t\t<MiniGrid rows={5} columns={5} globalRows={globalRows} />\n\t\t\t</ModeWrapper>\n\t\t\t<ModeWrapper onClick={() => updateGridSize(7, 7, 5)}>\n\t\t\t\t<h3>7x7</h3>\n\t\t\t\t<p>Win: 5 in a row</p>\n\n\t\t\t\t<MiniGrid rows={7} columns={7} globalRows={globalRows} />\n\t\t\t</ModeWrapper>\n\t\t</GameSettingsWrapper>\n\t);\n};\n\nexport default GameSettings;\n","import styled from 'styled-components';\n\nconst StyledSVG = styled.svg`\n\ttransition: 200ms ease-out;\n\twidth: 3rem;\n\theight: 3rem;\n\tcursor: pointer;\n\n\tpath {\n\t\tstroke: grey;\n\t\tstroke-width: 2;\n\t}\n\n\t&:hover {\n\t\tpath {\n\t\t\tstroke: #7051b8;\n\t\t}\n\t}\n`;\n\nconst CloseIcon = ({ clickHandler }) => {\n\treturn (\n\t\t<StyledSVG\n\t\t\tonClick={clickHandler}\n\t\t\twidth='24'\n\t\t\theight='24'\n\t\t\tfill='none'\n\t\t\tviewBox='0 0 24 24'\n\t\t>\n\t\t\t<path\n\t\t\t\tstrokeLinecap='round'\n\t\t\t\tstrokeLinejoin='round'\n\t\t\t\td='M17.25 6.75L6.75 17.25'\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tstrokeLinecap='round'\n\t\t\t\tstrokeLinejoin='round'\n\t\t\t\td='M6.75 6.75L17.25 17.25'\n\t\t\t/>\n\t\t</StyledSVG>\n\t);\n};\n\nexport default CloseIcon;\n","import styled from 'styled-components';\nimport GameSettings from './GameSettings';\nimport CloseIcon from '../Icons/CloseIcon';\n\nconst ModalBackground = styled.div`\n\tz-index: 998;\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-color: rgba(0, 0, 0, 0.5);\n`;\n\nconst PositionModal = styled.div`\n\tz-index: 999;\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n`;\n\nconst StyledModal = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 1rem;\n\tborder-radius: 1rem;\n\tmax-width: 90vw;\n\tbackground-color: #f7f7f7;\n\toverflow: auto;\n\tfont-size: 2rem;\n\tmax-height: 70vh;\n\n\tbox-shadow: 0 12px 17px 2px rgba(0, 0, 0, 0.14),\n\t\t0 5px 22px 4px rgba(0, 0, 0, 0.12), 0 7px 8px -4px rgba(0, 0, 0, 0.2),\n\t\tinset 0 4px 5px 0 rgba(255, 255, 255, 0.14),\n\t\tinset 0 1px 10px 0 rgba(255, 255, 255, 0.12),\n\t\tinset 0 2px 4px -1px rgba(255, 255, 255, 0.2);\n\n\t@media (min-width: 1440px) {\n\t\tpadding: 2rem;\n\t}\n`;\n\nconst TitleCloseWrap = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tpadding-left: 1rem;\n\n\t@media (min-width: 400px) {\n\t\tpadding-left: 2rem;\n\t}\n`;\n\nconst Modal = ({ closeSettings, setBoardSize, setConsecutiveToWin }) => {\n\treturn (\n\t\t<>\n\t\t\t<PositionModal>\n\t\t\t\t<StyledModal>\n\t\t\t\t\t<TitleCloseWrap>\n\t\t\t\t\t\t<h2>Select Mode</h2>\n\t\t\t\t\t\t<CloseIcon clickHandler={closeSettings} />\n\t\t\t\t\t</TitleCloseWrap>\n\t\t\t\t\t<GameSettings\n\t\t\t\t\t\tsetBoardSize={setBoardSize}\n\t\t\t\t\t\tsetNumToWin={setConsecutiveToWin}\n\t\t\t\t\t\tcloseModal={closeSettings}\n\t\t\t\t\t/>\n\t\t\t\t</StyledModal>\n\t\t\t</PositionModal>\n\t\t\t<ModalBackground onClick={closeSettings} />\n\t\t</>\n\t);\n};\n\nexport default Modal;\n","export const createInitialBoardState = (rows, columns) => {\n\t// Initialize 2d boardState array\n\tlet initialBoardState = [];\n\n\tfor (let row = 0; row < rows; row++) {\n\t\tinitialBoardState[row] = [];\n\t\tfor (let column = 0; column < columns; column++) {\n\t\t\tinitialBoardState[row][column] = '';\n\t\t}\n\t}\n\n\treturn initialBoardState;\n};\n\nexport const createDiagonalBoardState = (rows, columns) => {\n\t// Initialize 2d boardState array\n\tlet diagonals = [];\n\n\tfor (let i = 0; i < rows + columns - 1; i++) {\n\t\tdiagonals.push([]);\n\t}\n\n\treturn diagonals;\n};\n\nexport const checkBoardState = (currentBoardState, lengthReqForWin) => {\n\tlet gameIsWon = false;\n\tlet winner = null;\n\n\t// Loop through our 2d board state array\n\tfor (let currentRow of currentBoardState) {\n\t\tlet inARow = 0;\n\t\tlet XorO = '';\n\t\tfor (let tileValue of currentRow) {\n\t\t\tif (tileValue === XorO && tileValue !== '') {\n\t\t\t\t// If current tile is same as previous\n\t\t\t\tinARow++;\n\n\t\t\t\tif (inARow === lengthReqForWin) {\n\t\t\t\t\t// If we've reached a winning state\n\t\t\t\t\tgameIsWon = true;\n\t\t\t\t\twinner = XorO;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Reset our tracking array with new starting value\n\t\t\t\tinARow = 1;\n\t\t\t\tXorO = tileValue;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn [gameIsWon, winner];\n};\n\nexport const checkColumns = (\n\tcurrentBoardState,\n\trowLen,\n\tcolumnLen,\n\tlengthReqForWin\n) => {\n\tlet columnBasedBoardState = createInitialBoardState(rowLen, columnLen);\n\n\t// Convert 2d row array to 2d column array\n\tfor (let [i, currentRow] of currentBoardState.entries()) {\n\t\tfor (let [j, XorO] of currentRow.entries()) {\n\t\t\tcolumnBasedBoardState[j][i] = XorO;\n\t\t}\n\t}\n\n\tconst columnWin = checkBoardState(columnBasedBoardState, lengthReqForWin);\n\n\treturn columnWin;\n};\n\nexport const checkDiagonals = (\n\tcurrentBoardState,\n\trowLen,\n\tcolumnLen,\n\tlengthReqForWin\n) => {\n\tlet downLeftDiagonalBoardState = createDiagonalBoardState(rowLen, columnLen);\n\tlet downRightDiagonalBoardState = createDiagonalBoardState(rowLen, columnLen);\n\n\t// Convert 2d row array to 2d diagonal arrays\n\tfor (let [i, currentRow] of currentBoardState.entries()) {\n\t\tfor (let [j, XorO] of currentRow.entries()) {\n\t\t\tdownLeftDiagonalBoardState[i + j].push(XorO);\n\t\t\tdownRightDiagonalBoardState[i - j + rowLen - 1].push(XorO);\n\t\t}\n\t}\n\n\tconst bothDiagonals = [\n\t\t...downLeftDiagonalBoardState,\n\t\t...downRightDiagonalBoardState,\n\t].filter((diagonalArr) => diagonalArr.length >= lengthReqForWin);\n\n\tconst diagonalWin = checkBoardState(bothDiagonals, lengthReqForWin);\n\n\treturn diagonalWin;\n};\n","import { useState, useEffect, useCallback } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport Menu from './UI/Menu/Menu';\nimport Grid from './Grid/Grid';\nimport Footer from './UI/Footer';\nimport Modal from './UI/Modal/Modal';\nimport {\n\tcreateInitialBoardState,\n\tcheckBoardState,\n\tcheckColumns,\n\tcheckDiagonals,\n} from './Game/GameLogic';\n\nconst CssReset = createGlobalStyle`\n  *{\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n\n  html{\n    font-family: 'Saira Condensed', sans-serif;\n\n    font-size: 0.6em;\n\n    @media (min-width: 420px) {\n      font-size: 0.8em;\n    }\n\n    @media (min-width: 600px) {\n      font-size: 1em;\n    }\n  }\n`;\n\nconst AppContainer = styled.div`\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tmin-width: 300px;\n\toverflow: auto;\n\tdisplay: flex;\n\tflex-direction: column;\n\n\tbackground-image: linear-gradient(\n\t\t\t201deg,\n\t\t\trgba(148, 148, 148, 0.07) 0%,\n\t\t\trgba(148, 148, 148, 0.07) 50%,\n\t\t\trgba(83, 83, 83, 0.07) 50%,\n\t\t\trgba(83, 83, 83, 0.07) 100%\n\t\t),\n\t\tlinear-gradient(\n\t\t\t192deg,\n\t\t\trgba(176, 176, 176, 0.08) 0%,\n\t\t\trgba(176, 176, 176, 0.08) 50%,\n\t\t\trgba(180, 180, 180, 0.08) 50%,\n\t\t\trgba(180, 180, 180, 0.08) 100%\n\t\t),\n\t\tlinear-gradient(\n\t\t\t48deg,\n\t\t\trgba(185, 185, 185, 0.1) 0%,\n\t\t\trgba(185, 185, 185, 0.1) 50%,\n\t\t\trgba(243, 243, 243, 0.1) 50%,\n\t\t\trgba(243, 243, 243, 0.1) 100%\n\t\t),\n\t\tlinear-gradient(\n\t\t\t65deg,\n\t\t\trgba(172, 172, 172, 0.09) 0%,\n\t\t\trgba(172, 172, 172, 0.09) 50%,\n\t\t\trgba(209, 209, 209, 0.09) 50%,\n\t\t\trgba(209, 209, 209, 0.09) 100%\n\t\t),\n\t\tlinear-gradient(\n\t\t\t4deg,\n\t\t\trgba(224, 224, 224, 0.03) 0%,\n\t\t\trgba(224, 224, 224, 0.03) 50%,\n\t\t\trgba(49, 49, 49, 0.03) 50%,\n\t\t\trgba(49, 49, 49, 0.03) 100%\n\t\t),\n\t\tlinear-gradient(\n\t\t\t228deg,\n\t\t\trgba(152, 152, 152, 0.03) 0%,\n\t\t\trgba(152, 152, 152, 0.03) 50%,\n\t\t\trgba(130, 130, 130, 0.03) 50%,\n\t\t\trgba(130, 130, 130, 0.03) 100%\n\t\t),\n\t\tlinear-gradient(\n\t\t\t163deg,\n\t\t\trgba(170, 170, 170, 0.08) 0%,\n\t\t\trgba(170, 170, 170, 0.08) 50%,\n\t\t\trgba(232, 232, 232, 0.08) 50%,\n\t\t\trgba(232, 232, 232, 0.08) 100%\n\t\t),\n\t\tlinear-gradient(\n\t\t\t152deg,\n\t\t\trgba(12, 12, 12, 0.05) 0%,\n\t\t\trgba(12, 12, 12, 0.05) 50%,\n\t\t\trgba(161, 161, 161, 0.05) 50%,\n\t\t\trgba(161, 161, 161, 0.05) 100%\n\t\t),\n\t\tlinear-gradient(\n\t\t\t302deg,\n\t\t\trgba(48, 48, 48, 0.1) 0%,\n\t\t\trgba(48, 48, 48, 0.1) 50%,\n\t\t\trgba(195, 195, 195, 0.1) 50%,\n\t\t\trgba(195, 195, 195, 0.1) 100%\n\t\t),\n\t\tlinear-gradient(90deg, rgb(144, 14, 253), rgb(74, 115, 255));\n`;\n\nconst StyledApp = styled.div`\n\tdisplay: grid;\n\tgrid-template-rows: auto 1fr;\n\tgrid-template-columns: 1fr;\n\tgrid-template-areas:\n\t\t'controls'\n\t\t'grid';\n\tgap: 2rem;\n\tplace-items: center;\n\tpadding: 2rem 1rem;\n\tflex-grow: 1;\n\n\t@media (min-width: 400px) {\n\t\tpadding: 2rem;\n\t}\n\n\t@media (min-width: 1440px) {\n\t\tgrid-template-rows: 1fr;\n\t\tgrid-template-columns: 1fr 1fr 1fr;\n\t\tgrid-template-areas: 'controls grid .';\n\t}\n`;\n\nconst App = () => {\n\tconst [rows, setRows] = useState(3);\n\tconst [columns, setColumns] = useState(3);\n\tconst [lengthReqForWin, setLengthReqForWin] = useState(3);\n\tconst [boardState, setBoardState] = useState(\n\t\tcreateInitialBoardState(rows, columns)\n\t);\n\tconst [firstTurn, setFirstTurn] = useState(1);\n\tconst [turnCounter, setTurnCounter] = useState(firstTurn);\n\tconst [gameComplete, setGameComplete] = useState(false);\n\tconst [modalActive, setModalActive] = useState(false);\n\tconst [player1Win, setPlayer1Win] = useState(false);\n\tconst [player2Win, setPlayer2Win] = useState(false);\n\tconst [player1WinCount, setPlayer1WinCount] = useState(0);\n\tconst [player2WinCount, setPlayer2WinCount] = useState(0);\n\n\tconst resetBoardState = useCallback(\n\t\t(\n\t\t\tevent,\n\t\t\tnumRows = rows,\n\t\t\tnumColumns = columns,\n\t\t\tincrementFirstTurn = gameComplete ? true : false\n\t\t) => {\n\t\t\tsetBoardState(createInitialBoardState(numRows, numColumns));\n\t\t\tsetGameComplete(false);\n\t\t\tsetTurnCounter(firstTurn + 1);\n\t\t\tsetFirstTurn((currentValue) => currentValue + 1);\n\t\t\tsetPlayer1Win(false);\n\t\t\tsetPlayer2Win(false);\n\t\t},\n\t\t[columns, firstTurn, gameComplete, rows]\n\t);\n\n\tconst updateBoardState = useCallback((row, column, XorO) => {\n\t\tsetBoardState((currentBoardState) => {\n\t\t\tlet newBoardState = [...currentBoardState];\n\t\t\tnewBoardState[row][column] = XorO;\n\t\t\treturn newBoardState;\n\t\t});\n\n\t\tsetTurnCounter((currentTurnCount) => currentTurnCount + 1);\n\t}, []);\n\n\tconst toggleModal = useCallback(() => {\n\t\treturn modalActive ? setModalActive(false) : setModalActive(true);\n\t}, [modalActive]);\n\n\tconst updateBoardSize = useCallback(\n\t\t(numRows, numColumns) => {\n\t\t\tsetRows(numRows);\n\t\t\tsetColumns(numColumns);\n\t\t\tresetBoardState(null, numRows, numColumns);\n\t\t},\n\t\t[resetBoardState]\n\t);\n\n\t// Check for winner when board state changes\n\tuseEffect(() => {\n\t\tconst [rowWin, rowWinner] = checkBoardState(boardState, lengthReqForWin);\n\t\tconst [columnWin, columnWinner] = checkColumns(\n\t\t\tboardState,\n\t\t\tcolumns,\n\t\t\trows,\n\t\t\tlengthReqForWin\n\t\t);\n\t\tconst [diagonalWin, diagonalWinner] = checkDiagonals(\n\t\t\tboardState,\n\t\t\tcolumns,\n\t\t\trows,\n\t\t\tlengthReqForWin\n\t\t);\n\n\t\tif (\n\t\t\trowWin ||\n\t\t\tcolumnWin ||\n\t\t\tdiagonalWin ||\n\t\t\tturnCounter - firstTurn === rows * columns\n\t\t) {\n\t\t\tsetGameComplete(true);\n\t\t\tsetTurnCounter((currentTurnCount) => currentTurnCount + 1);\n\t\t\tif (rowWinner === 'X' || columnWinner === 'X' || diagonalWinner === 'X') {\n\t\t\t\tsetPlayer1Win(true);\n\t\t\t\tsetPlayer1WinCount((currentWinCount) => currentWinCount + 1);\n\t\t\t} else if (\n\t\t\t\trowWinner === 'O' ||\n\t\t\t\tcolumnWinner === 'O' ||\n\t\t\t\tdiagonalWinner === 'O'\n\t\t\t) {\n\t\t\t\tsetPlayer2Win(true);\n\t\t\t\tsetPlayer2WinCount((currentWinCount) => currentWinCount + 1);\n\t\t\t}\n\t\t}\n\t}, [boardState]);\n\n\treturn (\n\t\t<>\n\t\t\t<CssReset />\n\t\t\t<AppContainer>\n\t\t\t\t<StyledApp>\n\t\t\t\t\t<Menu\n\t\t\t\t\t\tgameComplete={gameComplete}\n\t\t\t\t\t\tresetBoardState={resetBoardState}\n\t\t\t\t\t\tshowSettings={toggleModal}\n\t\t\t\t\t\tplayer1Wins={player1WinCount}\n\t\t\t\t\t\tplayer2Wins={player2WinCount}\n\t\t\t\t\t\tturnCounter={turnCounter}\n\t\t\t\t\t\tplayer1Win={player1Win}\n\t\t\t\t\t\tplayer2Win={player2Win}\n\t\t\t\t\t/>\n\t\t\t\t\t<Grid\n\t\t\t\t\t\tgridRows={rows}\n\t\t\t\t\t\tgridColumns={columns}\n\t\t\t\t\t\tboardState={boardState}\n\t\t\t\t\t\tturnCounter={turnCounter}\n\t\t\t\t\t\tgameComplete={gameComplete}\n\t\t\t\t\t\tupdateBoardState={updateBoardState}\n\t\t\t\t\t/>\n\t\t\t\t</StyledApp>\n\t\t\t\t<Footer />\n\t\t\t\t{modalActive && (\n\t\t\t\t\t<Modal\n\t\t\t\t\t\tcloseSettings={toggleModal}\n\t\t\t\t\t\tsetBoardSize={updateBoardSize}\n\t\t\t\t\t\tsetConsecutiveToWin={setLengthReqForWin}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</AppContainer>\n\t\t</>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\nserviceWorkerRegistration.register()\n"],"sourceRoot":""}